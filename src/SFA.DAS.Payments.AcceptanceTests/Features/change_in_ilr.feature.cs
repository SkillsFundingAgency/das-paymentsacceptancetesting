// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("chanegs in aim sequence or ULN")]
    [NUnit.Framework.CategoryAttribute("ChangeInCircumstances")]
    public partial class ChanegsInAimSequenceOrULNFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "change_in_ilr.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "chanegs in aim sequence or ULN", null, ProgrammingLanguage.CSharp, new string[] {
                        "ChangeInCircumstances"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("822-AC01- Levy apprentice, provider changes aim sequence numbers in ILR after pay" +
            "ments have already occurred")]
        [NUnit.Framework.CategoryAttribute("AimSequenceOrUlnChange")]
        public virtual void _822_AC01_LevyApprenticeProviderChangesAimSequenceNumbersInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("822-AC01- Levy apprentice, provider changes aim sequence numbers in ILR after pay" +
                    "ments have already occurred", new string[] {
                        "AimSequenceOrUlnChange"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 7
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table258.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 11
        testRunner.And("the following commitments exist:", ((string)(null)), table258, "And ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table259.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 15
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table259, "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table260.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table260.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table260.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table260.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 19
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table260, "And ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table261.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table261.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 32
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table261, "When ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table262.AddRow(new string[] {
                        "Provider Earned Total",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table262.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "639.25",
                        "639.25",
                        "639.25",
                        "0"});
            table262.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "717.75"});
            table262.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600"});
            table262.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600"});
            table262.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table262.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table262.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 37
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table262, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("822-AC02 Non-Levy apprentice, provider changes aim sequence numbers in ILR after " +
            "payments have already occurred")]
        [NUnit.Framework.CategoryAttribute("AimSequenceOrUlnChange")]
        public virtual void _822_AC02Non_LevyApprenticeProviderChangesAimSequenceNumbersInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("822-AC02 Non-Levy apprentice, provider changes aim sequence numbers in ILR after " +
                    "payments have already occurred", new string[] {
                        "AimSequenceOrUlnChange"});
#line 56
 this.ScenarioSetup(scenarioInfo);
#line 58
        testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "aim sequence number",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table263.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "06/05/2017",
                        "1",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 59
   testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table263, "And ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table264.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "540",
                        "540",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "60",
                        "60",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "540",
                        "540",
                        "0"});
            table264.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "60",
                        "60",
                        "0"});
            table264.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "540",
                        "540",
                        "0",
                        "0"});
            table264.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 63
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table264, "And ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table265.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table265.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 77
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table265, "When ");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table266.AddRow(new string[] {
                        "Provider Earned Total",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table266.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "579.25",
                        "579.25",
                        "579.25",
                        "0"});
            table266.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "60",
                        "60",
                        "60",
                        "0"});
            table266.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "540",
                        "540",
                        "657.75"});
            table266.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "60",
                        "60",
                        "60"});
            table266.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table266.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "540",
                        "540",
                        "540",
                        "540"});
            table266.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
#line 82
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table266, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("822-AC03  Non-Levy apprentice, provider changes ULN for an apprentice in ILR afte" +
            "r payments have already occurred")]
        [NUnit.Framework.CategoryAttribute("AimSequenceOrUlnChange")]
        public virtual void _822_AC03Non_LevyApprenticeProviderChangesULNForAnApprenticeInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("822-AC03  Non-Levy apprentice, provider changes ULN for an apprentice in ILR afte" +
                    "r payments have already occurred", new string[] {
                        "AimSequenceOrUlnChange"});
#line 100
 this.ScenarioSetup(scenarioInfo);
#line 102
        testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "learner reference number",
                        "learner type",
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table267.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "1111111111",
                        "06/05/2017",
                        "1",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 103
   testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table267, "And ");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table268.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "540",
                        "540",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "60",
                        "60",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "540",
                        "540",
                        "0"});
            table268.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "60",
                        "60",
                        "0"});
            table268.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "540",
                        "540",
                        "0",
                        "0"});
            table268.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 107
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table268, "And ");
#line hidden
            TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                        "learner reference number",
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table269.AddRow(new string[] {
                        "learner a",
                        "2222222222",
                        "programme only non-DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
#line 121
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table269, "When ");
#line hidden
            TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table270.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "600",
                        "600"});
            table270.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "540",
                        "540",
                        "540",
                        "540"});
            table270.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "60",
                        "60",
                        "60",
                        "60"});
            table270.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "540",
                        "540",
                        "540"});
            table270.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "60",
                        "60",
                        "60"});
            table270.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table270.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "540",
                        "540",
                        "540",
                        "540"});
            table270.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 125
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table270, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("852-AC01- Levy apprentice, provider changes course details in ILR after payments " +
            "have already occurred")]
        [NUnit.Framework.CategoryAttribute("CourseOrAimrefChanges")]
        public virtual void _852_AC01_LevyApprenticeProviderChangesCourseDetailsInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("852-AC01- Levy apprentice, provider changes course details in ILR after payments " +
                    "have already occurred", new string[] {
                        "CourseOrAimrefChanges"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 146
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 147
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table271.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 150
        testRunner.And("the following commitments exist:", ((string)(null)), table271, "And ");
#line hidden
            TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table272.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "539",
                        "2",
                        "1",
                        "continuing"});
#line 154
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table272, "And ");
#line hidden
            TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table273.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table273.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table273.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table273.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 158
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table273, "And ");
#line hidden
            TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table274.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table274.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 171
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table274, "When ");
#line hidden
            TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table275.AddRow(new string[] {
                        "Provider Earned Total",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table275.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table275.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "1917.75",
                        "639.25",
                        "639.25"});
            table275.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-1200",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "1800",
                        "600",
                        "600"});
            table275.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "1200",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table275.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table275.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table275.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 176
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table275, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("852-AC02 Levy apprentice, changes aim reference for English/maths aims and paymen" +
            "ts are reconciled")]
        [NUnit.Framework.CategoryAttribute("CourseOrAimrefChanges")]
        public virtual void _852_AC02LevyApprenticeChangesAimReferenceForEnglishMathsAimsAndPaymentsAreReconciled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("852-AC02 Levy apprentice, changes aim reference for English/maths aims and paymen" +
                    "ts are reconciled", new string[] {
                        "CourseOrAimrefChanges"});
#line 194
this.ScenarioSetup(scenarioInfo);
#line 196
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table276.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 200
        testRunner.And("the following commitments exist:", ((string)(null)), table276, "And ");
#line hidden
            TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table277.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "programme",
                        "ZPROG001",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 204
        testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table277, "And ");
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table278.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table278.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table278.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table278.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 208
        testRunner.And("the following programme earnings and payments have been made to the provider A fo" +
                    "r learner a:", ((string)(null)), table278, "And ");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table279.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "2",
                        "maths or English",
                        "60001227",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 221
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table279, "And ");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table280.AddRow(new string[] {
                        "Provider Earned Total",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "39.25",
                        "39.25",
                        "0"});
            table280.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 225
        testRunner.And("the following maths or english earnings and payments have been made to the provid" +
                    "er A for learner a:", ((string)(null)), table280, "And ");
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "aim rate",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table281.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "2",
                        "programme",
                        "ZPROG001",
                        "",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
            table281.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "1",
                        "maths or English",
                        "50086832",
                        "471",
                        "",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
#line 238
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table281, "When ");
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table282.AddRow(new string[] {
                        "Provider Earned Total",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table282.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table282.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "639.25",
                        "639.25",
                        "717.75",
                        "639.25",
                        "639.25"});
            table282.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-78.50",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table282.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table282.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table282.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 243
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table282, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("852-AC03 Levy apprentice, deleted aim reference for English/maths aims and paymen" +
            "ts are refunded for the aim")]
        [NUnit.Framework.CategoryAttribute("CourseOrAimrefChanges")]
        public virtual void _852_AC03LevyApprenticeDeletedAimReferenceForEnglishMathsAimsAndPaymentsAreRefundedForTheAim()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("852-AC03 Levy apprentice, deleted aim reference for English/maths aims and paymen" +
                    "ts are refunded for the aim", new string[] {
                        "CourseOrAimrefChanges"});
#line 261
 this.ScenarioSetup(scenarioInfo);
#line 263
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 264
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table283.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 267
        testRunner.And("the following commitments exist:", ((string)(null)), table283, "And ");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table284.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "programme",
                        "ZPROG001",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 271
        testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table284, "And ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table285.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table285.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 275
        testRunner.And("the following programme earnings and payments have been made to the provider A fo" +
                    "r learner a:", ((string)(null)), table285, "And ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table286.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "2",
                        "maths or English",
                        "60001227",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 288
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table286, "And ");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table287.AddRow(new string[] {
                        "Provider Earned Total",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "39.25",
                        "39.25",
                        "0"});
            table287.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table287.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 292
        testRunner.And("the following maths or english earnings and payments have been made to the provid" +
                    "er A for learner a:", ((string)(null)), table287, "And ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim sequence number",
                        "aim type",
                        "aim reference",
                        "aim rate",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table288.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "1",
                        "programme",
                        "ZPROG001",
                        "",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
#line 305
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table288, "When ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table289.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table289.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table289.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "639.25",
                        "639.25",
                        "600",
                        "600",
                        "600"});
            table289.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-78.50",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table289.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table289.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table289.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 309
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table289, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("852-AC04- Levy apprentice, provider changes course details from standard to frame" +
            "work and adds maths/english in ILR after payments have already occurred")]
        [NUnit.Framework.CategoryAttribute("CourseOrAimrefChanges")]
        public virtual void _852_AC04_LevyApprenticeProviderChangesCourseDetailsFromStandardToFrameworkAndAddsMathsEnglishInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("852-AC04- Levy apprentice, provider changes course details from standard to frame" +
                    "work and adds maths/english in ILR after payments have already occurred", new string[] {
                        "CourseOrAimrefChanges"});
#line 329
this.ScenarioSetup(scenarioInfo);
#line 331
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 332
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table290.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 335
        testRunner.And("the following commitments exist:", ((string)(null)), table290, "And ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "standard code",
                        "completion status"});
            table291.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "50",
                        "continuing"});
#line 339
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table291, "And ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table292.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table292.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table292.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 343
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table292, "And ");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table293.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table293.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 356
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table293, "When ");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table294.AddRow(new string[] {
                        "Provider Earned Total",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table294.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table294.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "1917.75",
                        "639.25",
                        "639.25"});
            table294.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-1200",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "1800",
                        "600",
                        "600"});
            table294.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "1200",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table294.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table294.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table294.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 361
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table294, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("865-AC01- Levy apprentice, provider moves forward course start and adds maths/eng" +
            "lish in ILR after payments have already occurred")]
        [NUnit.Framework.CategoryAttribute("StartDateMovedForward")]
        public virtual void _865_AC01_LevyApprenticeProviderMovesForwardCourseStartAndAddsMathsEnglishInILRAfterPaymentsHaveAlreadyOccurred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("865-AC01- Levy apprentice, provider moves forward course start and adds maths/eng" +
                    "lish in ILR after payments have already occurred", new string[] {
                        "StartDateMovedForward"});
#line 381
this.ScenarioSetup(scenarioInfo);
#line 383
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 384
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table295.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/07/2017",
                        "01/07/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 387
        testRunner.And("the following commitments exist:", ((string)(null)), table295, "And ");
#line hidden
            TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table296.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 391
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table296, "And ");
#line hidden
            TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table297.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table297.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table297.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table297.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 395
  testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table297, "And ");
#line hidden
            TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table298.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/07/2017",
                        "20/07/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table298.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/07/2017",
                        "20/07/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 408
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table298, "When ");
#line hidden
            TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table299.AddRow(new string[] {
                        "Provider Earned Total",
                        "0",
                        "0",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table299.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "0",
                        "0",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table299.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "639.25",
                        "639.25",
                        "639.25"});
            table299.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-1200",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table299.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "1200",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600"});
            table299.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table299.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table299.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 413
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table299, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("865-AC02 Levy apprentice, learner moves start date forward , on prog payments and" +
            " english/maths will be refunded")]
        [NUnit.Framework.CategoryAttribute("StartDateMovedForward")]
        public virtual void _865_AC02LevyApprenticeLearnerMovesStartDateForwardOnProgPaymentsAndEnglishMathsWillBeRefunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("865-AC02 Levy apprentice, learner moves start date forward , on prog payments and" +
                    " english/maths will be refunded", new string[] {
                        "StartDateMovedForward"});
#line 431
this.ScenarioSetup(scenarioInfo);
#line 433
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 434
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table300.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 437
        testRunner.And("the following commitments exist:", ((string)(null)), table300, "And ");
#line hidden
            TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table301.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "programme",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 441
        testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table301, "And ");
#line hidden
            TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table302.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "600",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "600",
                        "600",
                        "0"});
            table302.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "0"});
            table302.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table302.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 445
        testRunner.And("the following programme earnings and payments have been made to the provider A fo" +
                    "r learner a:", ((string)(null)), table302, "And ");
#line hidden
            TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table303.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "2",
                        "maths or English",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 458
  testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table303, "And ");
#line hidden
            TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17"});
            table304.AddRow(new string[] {
                        "Provider Earned Total",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "39.25",
                        "39.25",
                        "0"});
            table304.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 462
        testRunner.And("the following maths or english earnings and payments have been made to the provid" +
                    "er A for learner a:", ((string)(null)), table304, "And ");
#line hidden
            TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table305.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/07/2017",
                        "20/07/2018",
                        "",
                        "continuing",
                        "programme",
                        "2",
                        "",
                        "403",
                        "2",
                        "1"});
            table305.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/07/2017",
                        "20/07/2018",
                        "",
                        "continuing",
                        "maths or english",
                        "1",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 475
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table305, "When ");
#line hidden
            TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table306.AddRow(new string[] {
                        "Provider Earned Total",
                        "0",
                        "0",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table306.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "0",
                        "0",
                        "600",
                        "600",
                        "639.25",
                        "639.25"});
            table306.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25",
                        "639.25"});
            table306.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-1278.50",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table306.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "1200",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600"});
            table306.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25"});
            table306.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table306.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 481
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table306, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("869-AC01 Levy apprentice, learner moves dates for learning support , on learning " +
            "support payments will be refunded")]
        [NUnit.Framework.CategoryAttribute("LearningSupportDateMovedForward")]
        public virtual void _869_AC01LevyApprenticeLearnerMovesDatesForLearningSupportOnLearningSupportPaymentsWillBeRefunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("869-AC01 Levy apprentice, learner moves dates for learning support , on learning " +
                    "support payments will be refunded", new string[] {
                        "LearningSupportDateMovedForward"});
#line 502
this.ScenarioSetup(scenarioInfo);
#line 504
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 505
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
        testRunner.And("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table307.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/05/2017",
                        "01/05/2018",
                        "403",
                        "2",
                        "1",
                        "9000",
                        "Active",
                        "01/05/2017",
                        ""});
#line 508
        testRunner.And("the following commitments exist:", ((string)(null)), table307, "And ");
#line hidden
            TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "aim type",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "completion status"});
            table308.AddRow(new string[] {
                        "learner a",
                        "06/05/2017",
                        "1",
                        "programme",
                        "403",
                        "2",
                        "1",
                        "continuing"});
#line 512
        testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table308, "And ");
#line hidden
            TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "05/17",
                        "06/17"});
            table309.AddRow(new string[] {
                        "On-program",
                        "600",
                        "600"});
            table309.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150"});
#line 516
        testRunner.And("the following payments have been made to the provider A for learner a:", ((string)(null)), table309, "And ");
#line hidden
            TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim sequence number",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table310.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "9000",
                        "06/05/2017",
                        "20/05/2018",
                        "",
                        "continuing",
                        "programme",
                        "1",
                        "",
                        "403",
                        "2",
                        "1"});
#line 526
        testRunner.When("an ILR file is submitted for the first time on 31/07/17 with the following data:", ((string)(null)), table310, "When ");
#line hidden
            TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table311.AddRow(new string[] {
                        "1",
                        "06/07/2017",
                        "20/07/2018"});
#line 529
  testRunner.And("the learning support status of the ILR is:", ((string)(null)), table311, "And ");
#line hidden
            TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "05/17",
                        "06/17",
                        "07/17",
                        "08/17",
                        "09/17",
                        "10/17"});
            table312.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "750",
                        "750",
                        "750",
                        "750"});
            table312.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "600",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table312.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table312.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-300",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table312.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600",
                        "600"});
            table312.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "150",
                        "150",
                        "150",
                        "150"});
            table312.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table312.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 534
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table312, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
