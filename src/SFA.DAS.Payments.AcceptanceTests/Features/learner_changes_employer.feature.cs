// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where a learner changes employers")]
    public partial class ProviderEarningsAndPaymentsWhereALearnerChangesEmployersFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "learner_changes_employer.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where a learner changes employers", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
    #line 4
        testRunner.Given("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens at the end of the month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensAtTheEndOfTheMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens at the end of the month", ((string[])(null)));
#line 6
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 7
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
        testRunner.Given("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table284.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table284.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "01/11/2017"});
#line 10
        testRunner.And("the learner changes employers", ((string)(null)), table284, "And ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table285.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table285.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table285.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/11/2017",
                        "31/08/2018",
                        "5625",
                        "active",
                        "01/11/2017",
                        ""});
#line 14
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table285, "And ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table286.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "5000",
                        "01/11/2017",
                        "625",
                        "01/11/2017"});
#line 19
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table286, "When ");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table287.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 22
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table287, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table288.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table288.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table288.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table288.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table288.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table288.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table288.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 25
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table288, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens mid month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensMidMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens mid month", ((string[])(null)));
#line 40
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 41
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table289.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "04/08/2017"});
            table289.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "10/11/2017"});
#line 44
        testRunner.And("the learner changes employers", ((string)(null)), table289, "And ");
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table290.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table290.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table290.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/11/2017",
                        "31/08/2018",
                        "5625",
                        "active",
                        "01/11/2017",
                        ""});
#line 48
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table290, "And ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table291.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "04/08/2017",
                        "3000",
                        "04/08/2017",
                        "5000",
                        "10/11/2017",
                        "625",
                        "10/11/2017"});
#line 54
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table291, "When ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table292.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 57
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table292, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table293.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table293.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table293.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table293.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table293.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table293.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table293.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table293.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table293.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table293.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table293.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 60
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table293, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost earlier than expected")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostEarlierThanExpected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost earlier than expected", ((string[])(null)));
#line 75
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 76
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table294.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "04/08/2017"});
            table294.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "10/11/2017"});
#line 79
        testRunner.And("the learner changes employers", ((string)(null)), table294, "And ");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table295.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table295.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table295.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/11/2017",
                        "31/08/2018",
                        "5625",
                        "active",
                        "01/11/2017",
                        ""});
#line 83
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table295, "And ");
#line hidden
            TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table296.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "04/08/2017",
                        "3000",
                        "04/08/2017",
                        "5000",
                        "25/10/2017",
                        "625",
                        "25/10/2017"});
#line 88
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table296, "When ");
#line hidden
            TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table297.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
#line 91
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table297, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table298.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "450",
                        "450",
                        "450"});
            table298.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "450",
                        "450",
                        "450"});
            table298.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table298.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 94
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table298, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where a learner switches" +
            " from DAS to Non Das employer at the end of month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereALearnerSwitchesFromDASToNonDasEmployerAtTheEndOfMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where a learner switches" +
                    " from DAS to Non Das employer at the end of month", ((string[])(null)));
#line 109
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 110
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table299.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table299.AddRow(new string[] {
                        "employer 2",
                        "Non DAS",
                        "03/11/2017"});
#line 112
        testRunner.And("the learner changes employers", ((string)(null)), table299, "And ");
#line hidden
            TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table300.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "15000",
                        "active",
                        "03/08/2017",
                        "02/11/2017"});
            table300.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "03/11/2017",
                        ""});
#line 116
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table300, "And ");
#line hidden
            TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table301.AddRow(new string[] {
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 120
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table301, "When ");
#line hidden
            TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table302.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "02/11/2017"});
            table302.AddRow(new string[] {
                        "Non-DAS",
                        "03/11/2017",
                        "04/08/2018"});
#line 123
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table302, "And ");
#line hidden
            TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table303.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
#line 127
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table303, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table304.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table304.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "450",
                        "450"});
            table304.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "50",
                        "50"});
            table304.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "450"});
            table304.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "50"});
            table304.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table304.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "450",
                        "450"});
#line 130
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table304, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, commitment entered for a" +
            " new employer in the middle of the month, and there is a change to the employer " +
            "and negotiated cost in the middle of a month in the ILR")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableCommitmentEnteredForANewEmployerInTheMiddleOfTheMonthAndThereIsAChangeToTheEmployerAndNegotiatedCostInTheMiddleOfAMonthInTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, commitment entered for a" +
                    " new employer in the middle of the month, and there is a change to the employer " +
                    "and negotiated cost in the middle of a month in the ILR", ((string[])(null)));
#line 148
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 149
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 150
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table305.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table305.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "15/11/2017"});
#line 152
        testRunner.And("the learner changes employers", ((string)(null)), table305, "And ");
#line hidden
            TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table306.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table306.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table306.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "15/11/2017",
                        "28/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 156
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table306, "And ");
#line hidden
            TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table307.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "5000",
                        "15/11/2017",
                        "625",
                        "15/11/2017"});
#line 161
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table307, "When ");
#line hidden
            TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table308.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 164
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table308, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table309.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table309.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table309.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table309.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table309.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table309.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table309.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table309.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 167
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table309, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, commitment entered for a" +
            " new employer in the middle of the month with gap, and there is a change to the " +
            "employer and negotiated cost in the middle of a month in the ILR")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableCommitmentEnteredForANewEmployerInTheMiddleOfTheMonthWithGapAndThereIsAChangeToTheEmployerAndNegotiatedCostInTheMiddleOfAMonthInTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, commitment entered for a" +
                    " new employer in the middle of the month with gap, and there is a change to the " +
                    "employer and negotiated cost in the middle of a month in the ILR", ((string[])(null)));
#line 182
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 183
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table310.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table310.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "15/11/2017"});
#line 186
        testRunner.And("the learner changes employers", ((string)(null)), table310, "And ");
#line hidden
            TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table311.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table311.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table311.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "15/11/2017",
                        "28/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 190
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table311, "And ");
#line hidden
            TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table312.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "5000",
                        "25/11/2017",
                        "625",
                        "25/11/2017"});
#line 195
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table312, "When ");
#line hidden
            TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table313.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 198
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table313, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table314.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table314.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table314.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table314.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table314.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table314.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table314.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table314.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table314.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table314.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table314.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 201
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table314, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"Earnings and payments for a DAS learner, levy available, commitment entered for a new employer in the middle of the month and ILR file is submitted before new price episode, and there is a change to the employer and negotiated cost in the middle of a month in the ILR")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableCommitmentEnteredForANewEmployerInTheMiddleOfTheMonthAndILRFileIsSubmittedBeforeNewPriceEpisodeAndThereIsAChangeToTheEmployerAndNegotiatedCostInTheMiddleOfAMonthInTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"Earnings and payments for a DAS learner, levy available, commitment entered for a new employer in the middle of the month and ILR file is submitted before new price episode, and there is a change to the employer and negotiated cost in the middle of a month in the ILR", ((string[])(null)));
#line 216
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 217
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 218
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table315.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table315.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "15/11/2017"});
#line 220
        testRunner.And("the learner changes employers", ((string)(null)), table315, "And ");
#line hidden
            TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table316.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table316.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "15000",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table316.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "15/11/2017",
                        "28/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 224
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table316, "And ");
#line hidden
            TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table317.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "5000",
                        "05/11/2017",
                        "625",
                        "05/11/2017"});
#line 229
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table317, "When ");
#line hidden
            TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table318.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
#line 232
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table318, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table319.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table319.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table319.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table319.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table319.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table319.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 235
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table319, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice changes from a non-DAS to DAS employer, levy is available for the DAS " +
            "employer")]
        public virtual void ApprenticeChangesFromANon_DASToDASEmployerLevyIsAvailableForTheDASEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice changes from a non-DAS to DAS employer, levy is available for the DAS " +
                    "employer", ((string[])(null)));
#line 250
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 251
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 252
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table320.AddRow(new string[] {
                        "employer 1",
                        "Non DAS",
                        "06/08/2017"});
            table320.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "01/04/2018"});
#line 253
        testRunner.And("the learner changes employers", ((string)(null)), table320, "And ");
#line hidden
            TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table321.AddRow(new string[] {
                        "employer 2",
                        "1",
                        "1",
                        "learner a",
                        "01/04/2018",
                        "01/08/2018",
                        "3500",
                        "active",
                        "01/04/2018",
                        ""});
#line 257
        testRunner.And("the following commitments exist on 03/04/2017:", ((string)(null)), table321, "And ");
#line hidden
            TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table322.AddRow(new string[] {
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "5000",
                        "06/08/2017",
                        "1000",
                        "06/08/2017",
                        "2500",
                        "01/04/2018",
                        "1000",
                        "01/04/2018"});
#line 260
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table322, "When ");
#line hidden
            TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table323.AddRow(new string[] {
                        "Non-DAS",
                        "06/08/2017",
                        "31/03/2018"});
            table323.AddRow(new string[] {
                        "DAS",
                        "01/04/2018",
                        "08/08/2018"});
#line 263
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table323, "And ");
#line hidden
            TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18"});
            table324.AddRow(new string[] {
                        "On-program",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1"});
#line 267
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table324, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18"});
            table325.AddRow(new string[] {
                        "Provider Earned Total",
                        "400",
                        "400",
                        "400",
                        "...",
                        "400",
                        "700",
                        "700",
                        "700",
                        "700",
                        "0"});
            table325.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "360",
                        "360",
                        "360",
                        "...",
                        "360",
                        "700",
                        "700",
                        "700",
                        "700",
                        "0"});
            table325.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "40",
                        "40",
                        "40",
                        "...",
                        "40",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table325.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table325.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "360",
                        "360",
                        "...",
                        "360",
                        "360",
                        "700",
                        "700",
                        "700",
                        "700"});
            table325.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "40",
                        "40",
                        "...",
                        "40",
                        "40",
                        "0",
                        "0",
                        "0",
                        "0"});
            table325.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table325.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "700",
                        "700",
                        "700",
                        "700"});
            table325.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "700",
                        "700",
                        "700",
                        "700",
                        "0"});
            table325.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table325.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "360",
                        "360",
                        "360",
                        "...",
                        "360",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 270
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table325, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where a total cost chang" +
            "es during the programme and ILR is submitted late")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereATotalCostChangesDuringTheProgrammeAndILRIsSubmittedLate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where a total cost chang" +
                    "es during the programme and ILR is submitted late", ((string[])(null)));
#line 285
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 286
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table326.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table326.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/11/2017"});
#line 289
        testRunner.And("the learner changes employers", ((string)(null)), table326, "And ");
#line hidden
            TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table327.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table327.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table327.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/11/2017",
                        "31/08/2018",
                        "5625",
                        "active",
                        "01/11/2017",
                        ""});
#line 293
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table327, "And ");
#line hidden
            TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table328.AddRow(new string[] {
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "5000",
                        "03/11/2017",
                        "625",
                        "03/11/2017"});
#line 298
        testRunner.When("an ILR file is submitted for the first time on 28/11/17 with the following data:", ((string)(null)), table328, "When ");
#line hidden
            TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table329.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table329.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table329.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table329.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table329.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "3500"});
            table329.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table329.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table329.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "3000"});
            table329.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table329.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table329.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 301
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table329, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and they have a break in" +
            " learning at the end of a month and return at the start of a later month with a " +
            "different employer")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndTheyHaveABreakInLearningAtTheEndOfAMonthAndReturnAtTheStartOfALaterMonthWithADifferentEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and they have a break in" +
                    " learning at the end of a month and return at the start of a later month with a " +
                    "different employer", ((string[])(null)));
#line 317
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 319
        testRunner.Given("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 321
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table330.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table330.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "01/01/2018"});
#line 323
        testRunner.And("the learner changes employers", ((string)(null)), table330, "And ");
#line hidden
            TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table331.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table331.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table331.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/01/2018",
                        "31/10/2018",
                        "5625",
                        "active",
                        "01/01/2018",
                        ""});
#line 327
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table331, "And ");
#line hidden
            TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table332.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "31/10/2017",
                        "withdrawn",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "",
                        "",
                        "",
                        ""});
            table332.AddRow(new string[] {
                        "learner a",
                        "01/01/2018",
                        "04/10/2018",
                        "",
                        "continuing",
                        "",
                        "",
                        "",
                        "",
                        "5000",
                        "01/01/2018",
                        "625",
                        "01/01/2018"});
#line 332
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table332, "When ");
#line hidden
            TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18"});
            table333.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 337
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table333, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18"});
            table334.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table334.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table334.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table334.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table334.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500"});
            table334.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table334.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table334.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table334.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "500"});
            table334.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table334.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 340
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table334, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and they have a break in" +
            " learning in the middle of a month and return in the middle of a later month wit" +
            "h a different employer")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndTheyHaveABreakInLearningInTheMiddleOfAMonthAndReturnInTheMiddleOfALaterMonthWithADifferentEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and they have a break in" +
                    " learning in the middle of a month and return in the middle of a later month wit" +
                    "h a different employer", ((string[])(null)));
#line 355
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 357
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 358
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table335.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table335.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "01/01/2018"});
#line 360
        testRunner.And("the learner changes employers", ((string)(null)), table335, "And ");
#line hidden
            TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table336.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table336.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table336.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/01/2018",
                        "31/10/2018",
                        "5625",
                        "active",
                        "01/01/2018",
                        ""});
#line 364
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table336, "And ");
#line hidden
            TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table337.AddRow(new string[] {
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "18/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "",
                        "",
                        "",
                        ""});
            table337.AddRow(new string[] {
                        "learner a",
                        "11/01/2018",
                        "04/10/2018",
                        "",
                        "continuing",
                        "",
                        "",
                        "",
                        "",
                        "5000",
                        "11/01/2018",
                        "625",
                        "11/01/2018"});
#line 369
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table337, "When ");
#line hidden
            TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18"});
            table338.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 374
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table338, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18"});
            table339.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table339.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table339.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table339.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table339.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500"});
            table339.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table339.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table339.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table339.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "500"});
            table339.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "500",
                        "500",
                        "500"});
            table339.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 377
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table339, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and they have a break in" +
            " learning in the middle of a month and return in the middle of a later month wit" +
            "h a different employer - before the second commitment is in place")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndTheyHaveABreakInLearningInTheMiddleOfAMonthAndReturnInTheMiddleOfALaterMonthWithADifferentEmployer_BeforeTheSecondCommitmentIsInPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and they have a break in" +
                    " learning in the middle of a month and return in the middle of a later month wit" +
                    "h a different employer - before the second commitment is in place", ((string[])(null)));
#line 391
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 393
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 394
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table340.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "01/08/2017"});
            table340.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "01/01/2018"});
#line 396
        testRunner.And("the learner changes employers", ((string)(null)), table340, "And ");
#line hidden
            TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table341.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "31/10/2017"});
            table341.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "15000",
                        "cancelled",
                        "01/11/2017",
                        ""});
            table341.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "learner a",
                        "01/01/2018",
                        "31/10/2018",
                        "5625",
                        "active",
                        "01/01/2018",
                        ""});
#line 400
        testRunner.And("the following commitments exist on 03/12/2017:", ((string)(null)), table341, "And ");
#line hidden
            TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table342.AddRow(new string[] {
                        "learner a",
                        "03/08/2017",
                        "04/08/2018",
                        "18/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "",
                        "",
                        "",
                        ""});
            table342.AddRow(new string[] {
                        "learner a",
                        "21/12/2017",
                        "04/09/2018",
                        "",
                        "continuing",
                        "",
                        "",
                        "",
                        "",
                        "5000",
                        "21/12/2017",
                        "625",
                        "21/12/2017"});
#line 405
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table342, "When ");
#line hidden
            TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table343.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        ""});
#line 410
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table343, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table344.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "500",
                        "500",
                        "500"});
            table344.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table344.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 413
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table344, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
            "n the transfer month - and the date at which the incentive is earned is before t" +
            "he transfer date")]
        public virtual void _1LearnerAged16_18LevyAvailableChangesEmployerEarnsIncentivePaymentInTheTransferMonth_AndTheDateAtWhichTheIncentiveIsEarnedIsBeforeTheTransferDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
                    "n the transfer month - and the date at which the incentive is earned is before t" +
                    "he transfer date", ((string[])(null)));
#line 430
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 432
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table345.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "06/08/2017"});
            table345.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "15/11/2017"});
#line 435
        testRunner.And("the learner changes employers", ((string)(null)), table345, "And ");
#line hidden
            TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table346.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table346.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table346.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "provider a",
                        "learner a",
                        "15/11/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 439
        testRunner.And("the following commitments exist:", ((string)(null)), table346, "And ");
#line hidden
            TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "learner type",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table347.AddRow(new string[] {
                        "provider a",
                        "16-18 programme only DAS",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017",
                        "4000",
                        "15/11/2017",
                        "1625",
                        "15/11/2017"});
#line 445
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table347, "When ");
#line hidden
            TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table348.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 2 v1",
                        "commitment 2 v1",
                        "commitment 2 v1"});
            table348.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
            table348.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
#line 449
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table348, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table349.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "500"});
            table349.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "500"});
            table349.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500"});
            table349.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "500"});
            table349.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500"});
            table349.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table349.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "0"});
#line 455
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table349, "And ");
#line hidden
            TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table350.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500"});
            table350.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table350.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table350.AddRow(new string[] {
                        "Employer 1 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
            table350.AddRow(new string[] {
                        "Employer 2 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table350.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
#line 471
        testRunner.And("the transaction types for the payments for provider a are:", ((string)(null)), table350, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
            "n the commitment transfer month - and the employer transfer is recorded on the I" +
            "LR in a later month")]
        public virtual void _1LearnerAged16_18LevyAvailableChangesEmployerEarnsIncentivePaymentInTheCommitmentTransferMonth_AndTheEmployerTransferIsRecordedOnTheILRInALaterMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
                    "n the commitment transfer month - and the employer transfer is recorded on the I" +
                    "LR in a later month", ((string[])(null)));
#line 481
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 483
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 484
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 485
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table351.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "06/08/2017"});
            table351.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "15/12/2017"});
#line 486
        testRunner.And("the learner changes employers", ((string)(null)), table351, "And ");
#line hidden
            TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table352.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table352.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table352.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "provider a",
                        "learner a",
                        "15/11/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 490
        testRunner.And("the following commitments exist:", ((string)(null)), table352, "And ");
#line hidden
            TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "learner type",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table353.AddRow(new string[] {
                        "provider a",
                        "16-18 programme only DAS",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017",
                        "4000",
                        "15/12/2017",
                        "1625",
                        "15/12/2017"});
#line 496
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table353, "When ");
#line hidden
            TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table354.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
            table354.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
            table354.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
#line 500
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table354, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table355.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "562.50",
                        "562.50"});
            table355.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "562.50",
                        "562.50"});
            table355.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "562.50"});
            table355.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "562.50"});
            table355.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "562.50",
                        "562.50"});
            table355.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table355.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "0"});
#line 506
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table355, "And ");
#line hidden
            TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table356.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "0",
                        "562.50"});
            table356.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table356.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table356.AddRow(new string[] {
                        "Employer 1 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
            table356.AddRow(new string[] {
                        "Employer 2 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table356.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
#line 522
         testRunner.And("the transaction types for the payments for provider a are:", ((string)(null)), table356, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
            "n the commitment transfer month - and the ILR transfer happens at an earlier poi" +
            "nt than the commitment  changes")]
        public virtual void _1LearnerAged16_18LevyAvailableChangesEmployerEarnsIncentivePaymentInTheCommitmentTransferMonth_AndTheILRTransferHappensAtAnEarlierPointThanTheCommitmentChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 16-18, levy available, changes employer, earns incentive payment i" +
                    "n the commitment transfer month - and the ILR transfer happens at an earlier poi" +
                    "nt than the commitment  changes", ((string[])(null)));
#line 532
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 534
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 535
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table357.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "06/08/2017"});
            table357.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "09/11/2017"});
#line 537
        testRunner.And("the learner changes employers", ((string)(null)), table357, "And ");
#line hidden
            TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table358.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table358.AddRow(new string[] {
                        "employer 1",
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "cancelled",
                        "15/11/2017",
                        ""});
            table358.AddRow(new string[] {
                        "employer 2",
                        "2",
                        "1",
                        "provider a",
                        "learner a",
                        "15/11/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 541
        testRunner.And("the following commitments exist:", ((string)(null)), table358, "And ");
#line hidden
            TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "learner type",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table359.AddRow(new string[] {
                        "provider a",
                        "16-18 programme only DAS",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017",
                        "4000",
                        "09/11/2017",
                        "1625",
                        "09/11/2017"});
#line 547
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table359, "When ");
#line hidden
            TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table360.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
            table360.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
            table360.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "commitment 1 v1",
                        "",
                        ""});
#line 551
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table360, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table361.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "500"});
            table361.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "0"});
            table361.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Payment due from employer 2",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table361.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "0"});
#line 557
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table361, "And ");
#line hidden
            TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table362.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table362.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table362.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table362.AddRow(new string[] {
                        "Employer 1 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
            table362.AddRow(new string[] {
                        "Employer 2 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table362.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "0"});
#line 573
         testRunner.And("the transaction types for the payments for provider a are:", ((string)(null)), table362, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC1- Provider earnings and payments where learner changes employer and there is a" +
            " gap between commitments - provider receives payment during the gap as they amen" +
            "d the ACT code and employment status code correctly.")]
        [NUnit.Framework.CategoryAttribute("LearnerChangesEmployerGapInCommitments")]
        public virtual void AC1_ProviderEarningsAndPaymentsWhereLearnerChangesEmployerAndThereIsAGapBetweenCommitments_ProviderReceivesPaymentDuringTheGapAsTheyAmendTheACTCodeAndEmploymentStatusCodeCorrectly_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC1- Provider earnings and payments where learner changes employer and there is a" +
                    " gap between commitments - provider receives payment during the gap as they amen" +
                    "d the ACT code and employment status code correctly.", new string[] {
                        "LearnerChangesEmployerGapInCommitments"});
#line 585
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 586
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 587
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table363.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table363.AddRow(new string[] {
                        "No employer",
                        "Non-DAS",
                        "03/10/2017"});
            table363.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/11/2017"});
#line 590
        testRunner.And("the learner changes employers", ((string)(null)), table363, "And ");
#line hidden
            TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Employer",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table364.AddRow(new string[] {
                        "1",
                        "1",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "Active",
                        "01/08/2017",
                        "02/10/2017"});
            table364.AddRow(new string[] {
                        "1",
                        "2",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "03/10/2017",
                        ""});
            table364.AddRow(new string[] {
                        "2",
                        "1",
                        "employer 2",
                        "provider a",
                        "learner a",
                        "01/11/2017",
                        "04/08/2018",
                        "5625",
                        "Active",
                        "01/11/2017",
                        ""});
#line 595
        testRunner.And("the following commitments exist:", ((string)(null)), table364, "And ");
#line hidden
            TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table365.AddRow(new string[] {
                        "learner a",
                        "provider a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 600
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table365, "When ");
#line hidden
            TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table366.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "02/10/2017"});
            table366.AddRow(new string[] {
                        "Non-DAS",
                        "03/10/2017",
                        "02/11/2017"});
            table366.AddRow(new string[] {
                        "DAS",
                        "03/11/2017",
                        "04/08/2018"});
#line 603
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table366, "And ");
#line hidden
            TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Employment Status",
                        "Employment Status Applies"});
            table367.AddRow(new string[] {
                        "employer 1",
                        "in paid employment",
                        "02/08/2017"});
            table367.AddRow(new string[] {
                        "",
                        "not in paid employment",
                        "03/10/2017"});
            table367.AddRow(new string[] {
                        "employer 2",
                        "in paid employment",
                        "03/11/2017"});
#line 608
        testRunner.And("the employment status in the ILR is:", ((string)(null)), table367, "And ");
#line hidden
            TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table368.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 614
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table368, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table369.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table369.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table369.AddRow(new string[] {
                        "employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table369.AddRow(new string[] {
                        "employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table369.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "500",
                        "500"});
            table369.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table369.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "0"});
#line 617
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table369, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC2- Provider earnings and payments where learner changes employer and there is a" +
            " gap between commitments - provider receives no payment during the gap as they d" +
            "o not change the ACT code or employment status on the ILR")]
        [NUnit.Framework.CategoryAttribute("LearnerChangesEmployerGapInCommitments")]
        public virtual void AC2_ProviderEarningsAndPaymentsWhereLearnerChangesEmployerAndThereIsAGapBetweenCommitments_ProviderReceivesNoPaymentDuringTheGapAsTheyDoNotChangeTheACTCodeOrEmploymentStatusOnTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC2- Provider earnings and payments where learner changes employer and there is a" +
                    " gap between commitments - provider receives no payment during the gap as they d" +
                    "o not change the ACT code or employment status on the ILR", new string[] {
                        "LearnerChangesEmployerGapInCommitments"});
#line 631
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 632
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 633
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 635
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table370.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table370.AddRow(new string[] {
                        "No employer",
                        "Non-DAS",
                        "03/10/2017"});
            table370.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/11/2017"});
#line 636
        testRunner.And("the learner changes employers", ((string)(null)), table370, "And ");
#line hidden
            TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Employer",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table371.AddRow(new string[] {
                        "1",
                        "1",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "Active",
                        "01/08/2017",
                        "02/10/2017"});
            table371.AddRow(new string[] {
                        "1",
                        "2",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "03/10/2017",
                        ""});
            table371.AddRow(new string[] {
                        "2",
                        "1",
                        "employer 2",
                        "provider a",
                        "learner a",
                        "01/11/2017",
                        "04/08/2018",
                        "5625",
                        "Active",
                        "01/11/2017",
                        ""});
#line 641
        testRunner.And("the following commitments exist:", ((string)(null)), table371, "And ");
#line hidden
            TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table372.AddRow(new string[] {
                        "learner a",
                        "provider a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 646
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table372, "When ");
#line hidden
            TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table373.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "04/08/2018"});
#line 649
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table373, "And ");
#line hidden
            TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Employment Status",
                        "Employment Status Applies"});
            table374.AddRow(new string[] {
                        "employer 1",
                        "in paid employment",
                        "02/08/2017"});
#line 653
        testRunner.And("the employment status in the ILR is:", ((string)(null)), table374, "And ");
#line hidden
            TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table375.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 656
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table375, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table376.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table376.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "500"});
            table376.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table376.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table376.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "500",
                        "500"});
            table376.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 659
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table376, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC3- Provider earnings and payments where learner changes employer and there is a" +
            " gap between commitments - provider does not receive payment during the gap as t" +
            "hey amend the ACT code but do not amend the employment status code correctly.")]
        [NUnit.Framework.CategoryAttribute("LearnerChangesEmployerGapInCommitments")]
        public virtual void AC3_ProviderEarningsAndPaymentsWhereLearnerChangesEmployerAndThereIsAGapBetweenCommitments_ProviderDoesNotReceivePaymentDuringTheGapAsTheyAmendTheACTCodeButDoNotAmendTheEmploymentStatusCodeCorrectly_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC3- Provider earnings and payments where learner changes employer and there is a" +
                    " gap between commitments - provider does not receive payment during the gap as t" +
                    "hey amend the ACT code but do not amend the employment status code correctly.", new string[] {
                        "LearnerChangesEmployerGapInCommitments"});
#line 671
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 672
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 673
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 674
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 675
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table377.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table377.AddRow(new string[] {
                        "No employer",
                        "Non-DAS",
                        "03/10/2017"});
            table377.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/11/2017"});
#line 676
        testRunner.And("the learner changes employers", ((string)(null)), table377, "And ");
#line hidden
            TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Employer",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table378.AddRow(new string[] {
                        "1",
                        "1",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "Active",
                        "01/08/2017",
                        "02/10/2017"});
            table378.AddRow(new string[] {
                        "1",
                        "2",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "03/10/2017",
                        ""});
            table378.AddRow(new string[] {
                        "2",
                        "1",
                        "employer 2",
                        "provider a",
                        "learner a",
                        "01/11/2017",
                        "04/08/2018",
                        "5625",
                        "Active",
                        "01/11/2017",
                        ""});
#line 681
        testRunner.And("the following commitments exist:", ((string)(null)), table378, "And ");
#line hidden
            TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table379.AddRow(new string[] {
                        "learner a",
                        "provider a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 686
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table379, "When ");
#line hidden
            TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table380.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "02/10/2017"});
            table380.AddRow(new string[] {
                        "Non-DAS",
                        "03/10/2017",
                        "02/11/2017"});
            table380.AddRow(new string[] {
                        "DAS",
                        "03/11/2017",
                        "04/08/2018"});
#line 689
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table380, "And ");
#line hidden
            TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Employment Status",
                        "Employment Status Applies"});
            table381.AddRow(new string[] {
                        "employer 1",
                        "in paid employment",
                        "02/08/2017"});
#line 694
        testRunner.And("the employment status in the ILR is:", ((string)(null)), table381, "And ");
#line hidden
            TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table382.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 697
         testRunner.Then("the data lock status will be as follows:", ((string)(null)), table382, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table383.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table383.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "900",
                        "500"});
            table383.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table383.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table383.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "500",
                        "500"});
            table383.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 700
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table383, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC4-Provider earnings and payments where learner changes employer and there is a " +
            "gap between commitments - provider does not receive payment during the gap as th" +
            "ey amend the employment status code correctly but do not amend the ACT code.")]
        [NUnit.Framework.CategoryAttribute("LearnerChangesEmployerGapInCommitments")]
        public virtual void AC4_ProviderEarningsAndPaymentsWhereLearnerChangesEmployerAndThereIsAGapBetweenCommitments_ProviderDoesNotReceivePaymentDuringTheGapAsTheyAmendTheEmploymentStatusCodeCorrectlyButDoNotAmendTheACTCode_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC4-Provider earnings and payments where learner changes employer and there is a " +
                    "gap between commitments - provider does not receive payment during the gap as th" +
                    "ey amend the employment status code correctly but do not amend the ACT code.", new string[] {
                        "LearnerChangesEmployerGapInCommitments"});
#line 712
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 714
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 715
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 717
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table384.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table384.AddRow(new string[] {
                        "No employer",
                        "Non-DAS",
                        "03/10/2017"});
            table384.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/11/2017"});
#line 718
        testRunner.And("the learner changes employers", ((string)(null)), table384, "And ");
#line hidden
            TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Employer",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table385.AddRow(new string[] {
                        "1",
                        "1",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "Active",
                        "01/08/2017",
                        "02/10/2017"});
            table385.AddRow(new string[] {
                        "1",
                        "2",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "03/10/2017",
                        ""});
            table385.AddRow(new string[] {
                        "2",
                        "1",
                        "employer 2",
                        "provider a",
                        "learner a",
                        "01/11/2017",
                        "04/08/2018",
                        "5625",
                        "Active",
                        "01/11/2017",
                        ""});
#line 723
        testRunner.And("the following commitments exist:", ((string)(null)), table385, "And ");
#line hidden
            TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table386.AddRow(new string[] {
                        "learner a",
                        "provider a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 728
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table386, "When ");
#line hidden
            TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table387.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "04/08/2018"});
#line 731
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table387, "And ");
#line hidden
            TechTalk.SpecFlow.Table table388 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Employment Status",
                        "Employment Status Applies"});
            table388.AddRow(new string[] {
                        "employer 1",
                        "in paid employment",
                        "02/08/2017"});
            table388.AddRow(new string[] {
                        "",
                        "not in paid employment",
                        "03/10/2017"});
            table388.AddRow(new string[] {
                        "employer 2",
                        "in paid employment",
                        "03/11/2017"});
#line 735
         testRunner.And("the employment status in the ILR is:", ((string)(null)), table388, "And ");
#line hidden
            TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table389.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 740
         testRunner.Then("the data lock status will be as follows:", ((string)(null)), table389, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table390.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table390.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "500"});
            table390.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500"});
            table390.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "500",
                        "500"});
            table390.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 743
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table390, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC5-Provider earnings and payments where learner changes employer and there is a " +
            "gap of more than 12 weeks between commitments - provider does not receive more t" +
            "han 12 weeks of payments during the gap.")]
        [NUnit.Framework.CategoryAttribute("LearnerChangesEmployerGapInCommitments")]
        public virtual void AC5_ProviderEarningsAndPaymentsWhereLearnerChangesEmployerAndThereIsAGapOfMoreThan12WeeksBetweenCommitments_ProviderDoesNotReceiveMoreThan12WeeksOfPaymentsDuringTheGap_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC5-Provider earnings and payments where learner changes employer and there is a " +
                    "gap of more than 12 weeks between commitments - provider does not receive more t" +
                    "han 12 weeks of payments during the gap.", new string[] {
                        "LearnerChangesEmployerGapInCommitments"});
#line 757
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 758
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 759
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 760
        testRunner.And("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 761
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Type",
                        "ILR employment start date"});
            table391.AddRow(new string[] {
                        "employer 1",
                        "DAS",
                        "03/08/2017"});
            table391.AddRow(new string[] {
                        "No employer",
                        "Non-DAS",
                        "09/10/2017"});
            table391.AddRow(new string[] {
                        "employer 2",
                        "DAS",
                        "03/03/2018"});
#line 762
        testRunner.And("the learner changes employers", ((string)(null)), table391, "And ");
#line hidden
            TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Employer",
                        "Provider",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table392.AddRow(new string[] {
                        "1",
                        "1",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "Active",
                        "01/08/2017",
                        "08/10/2017"});
            table392.AddRow(new string[] {
                        "1",
                        "2",
                        "employer 1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "15000",
                        "cancelled",
                        "09/10/2017",
                        ""});
            table392.AddRow(new string[] {
                        "2",
                        "1",
                        "employer 2",
                        "provider a",
                        "learner a",
                        "01/11/2017",
                        "04/08/2018",
                        "5625",
                        "Active",
                        "01/03/2018",
                        ""});
#line 767
        testRunner.And("the following commitments exist:", ((string)(null)), table392, "And ");
#line hidden
            TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table393.AddRow(new string[] {
                        "learner a",
                        "provider a",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017",
                        "4500",
                        "03/03/2018",
                        "1125",
                        "03/03/2018"});
#line 772
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table393, "When ");
#line hidden
            TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                        "contract type",
                        "date from",
                        "date to"});
            table394.AddRow(new string[] {
                        "DAS",
                        "03/08/2017",
                        "08/10/2017"});
            table394.AddRow(new string[] {
                        "Non-DAS",
                        "09/10/2017",
                        "02/03/2018"});
            table394.AddRow(new string[] {
                        "DAS",
                        "03/03/2018",
                        "04/08/2018"});
#line 775
        testRunner.And("the Contract type in the ILR is:", ((string)(null)), table394, "And ");
#line hidden
            TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer",
                        "Employment Status",
                        "Employment Status Applies"});
            table395.AddRow(new string[] {
                        "employer 1",
                        "in paid employment",
                        "02/08/2017"});
            table395.AddRow(new string[] {
                        "",
                        "not in paid employment",
                        "09/10/2017"});
            table395.AddRow(new string[] {
                        "employer 2",
                        "in paid employment",
                        "02/03/2018"});
#line 780
        testRunner.And("the employment status in the ILR is:", ((string)(null)), table395, "And ");
#line hidden
            TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18"});
            table396.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "commitment 2 v1",
                        "commitment 2 v1"});
#line 786
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table396, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18"});
            table397.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "Employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "Employer 2 Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 789
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table397, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
