// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("16 to 18 learner incentives, framework uplifts, level 2 english or maths payments" +
        "")]
    [NUnit.Framework.CategoryAttribute("AdditionalPayments")]
    public partial class _16To18LearnerIncentivesFrameworkUpliftsLevel2EnglishOrMathsPaymentsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "additional_payments.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "16 to 18 learner incentives, framework uplifts, level 2 english or maths payments" +
                    "", null, ProgrammingLanguage.CSharp, new string[] {
                        "AdditionalPayments"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC1- Payment for a 16-18 DAS learner, levy available, incentives earned")]
        public virtual void AC1_PaymentForA16_18DASLearnerLevyAvailableIncentivesEarned()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC1- Payment for a 16-18 DAS learner, levy available, incentives earned", ((string[])(null)));
#line 4
   this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table1.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active"});
#line 7
    testRunner.And("the following commitments exist:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table2.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing"});
#line 11
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table3.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "2000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table3.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "2000",
                        "...",
                        "1000",
                        "1000"});
            table3.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table3.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "0",
                        "0"});
            table3.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table3.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "...",
                        "1000",
                        "0"});
#line 15
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table4.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table4.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table4.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table4.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table4.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
#line 24
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC2- Payment for a 16-18 DAS learner, levy available, incentives not paid as data" +
            " lock fails")]
        public virtual void AC2_PaymentForA16_18DASLearnerLevyAvailableIncentivesNotPaidAsDataLockFails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC2- Payment for a 16-18 DAS learner, levy available, incentives not paid as data" +
                    " lock fails", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 35
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table5.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/09/2017",
                        "01/09/2018",
                        "15000",
                        "active"});
#line 36
    testRunner.And("the following commitments exist:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table6.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only DAS",
                        "15000",
                        "28/08/2017",
                        "29/08/2018",
                        "",
                        "continuing"});
#line 40
     testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table7.AddRow(new string[] {
                        "On-program",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        ""});
#line 44
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table8.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "2000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table8.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 50
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC3-Learner finishes on time, earns on-programme and completion payments. Assumes" +
            " 12 month apprenticeship and learner completes after 10 months.")]
        public virtual void AC3_LearnerFinishesOnTimeEarnsOn_ProgrammeAndCompletionPayments_Assumes12MonthApprenticeshipAndLearnerCompletesAfter10Months_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC3-Learner finishes on time, earns on-programme and completion payments. Assumes" +
                    " 12 month apprenticeship and learner completes after 10 months.", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
    testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table9.AddRow(new string[] {
                        "123456",
                        "16-18 programme only non-DAS",
                        "9000",
                        "06/08/2017",
                        "09/08/2018",
                        "10/08/2018",
                        "Completed",
                        "403",
                        "2",
                        "1"});
#line 62
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table10.AddRow(new string[] {
                        "Provider Earned Total",
                        "720",
                        "720",
                        "720",
                        "1720",
                        "720",
                        "...",
                        "720",
                        "720",
                        "3160",
                        "0"});
            table10.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "660",
                        "660",
                        "660",
                        "1660",
                        "660",
                        "...",
                        "660",
                        "660",
                        "2980",
                        "0"});
            table10.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "60",
                        "60",
                        "60",
                        "60",
                        "60",
                        "...",
                        "60",
                        "60",
                        "180",
                        "0"});
            table10.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "660",
                        "660",
                        "660",
                        "1660",
                        "...",
                        "660",
                        "660",
                        "660",
                        "2980"});
            table10.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "60",
                        "60",
                        "60",
                        "60",
                        "...",
                        "60",
                        "60",
                        "60",
                        "180"});
            table10.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table10.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table10.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table10.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "540",
                        "540",
                        "540",
                        "540",
                        "540",
                        "...",
                        "540",
                        "540",
                        "1620",
                        "0"});
            table10.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "120",
                        "1360",
                        "0"});
#line 66
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table10, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table11.AddRow(new string[] {
                        "On-program",
                        "0",
                        "540",
                        "540",
                        "540",
                        "540",
                        "...",
                        "540",
                        "540",
                        "540",
                        "0"});
            table11.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1620"});
            table11.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table11.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table11.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table11.AddRow(new string[] {
                        "Framework uplift on-program",
                        "0",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "120",
                        "120",
                        "0"});
            table11.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "360"});
            table11.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table11.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 79
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table11, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC4-Learner finishes on time, Price is less than Funding Band Maximum of �9,000")]
        public virtual void AC4_LearnerFinishesOnTimePriceIsLessThanFundingBandMaximumOf9000()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC4-Learner finishes on time, Price is less than Funding Band Maximum of �9,000", ((string[])(null)));
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
    testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table12.AddRow(new string[] {
                        "123455",
                        "16-18 programme only non-DAS",
                        "8250",
                        "06/08/2017",
                        "09/08/2018",
                        "10/08/2018",
                        "Completed",
                        "403",
                        "2",
                        "1"});
#line 94
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table12, "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table13.AddRow(new string[] {
                        "Provider Earned Total",
                        "670",
                        "670",
                        "670",
                        "1670",
                        "670",
                        "...",
                        "670",
                        "670",
                        "3010",
                        "0"});
            table13.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "615",
                        "615",
                        "615",
                        "1615",
                        "615",
                        "...",
                        "615",
                        "615",
                        "3845",
                        "0"});
            table13.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "55",
                        "55",
                        "55",
                        "55",
                        "55",
                        "...",
                        "55",
                        "55",
                        "165",
                        "0"});
            table13.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "615",
                        "615",
                        "615",
                        "1615",
                        "...",
                        "615",
                        "615",
                        "615",
                        "2845"});
            table13.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "55",
                        "55",
                        "55",
                        "55",
                        "...",
                        "55",
                        "55",
                        "55",
                        "165"});
            table13.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table13.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table13.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table13.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "495",
                        "495",
                        "495",
                        "495",
                        "495",
                        "...",
                        "495",
                        "495",
                        "1485",
                        "0"});
            table13.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "120",
                        "1360",
                        "0"});
#line 98
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table14.AddRow(new string[] {
                        "On-program",
                        "0",
                        "495",
                        "495",
                        "495",
                        "495",
                        "...",
                        "495",
                        "495",
                        "495",
                        "0"});
            table14.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1485"});
            table14.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table14.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table14.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table14.AddRow(new string[] {
                        "Framework uplift on-program",
                        "0",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "120",
                        "120",
                        "0"});
            table14.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "360"});
            table14.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table14.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 111
      testRunner.And("the transaction types for the payments are:", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"AC5- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 1-10% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK The provider incentive for this postcode group is �600 split equally into 2 payments at 90 and 365 days. INELIGIBLE FOR APPRENTICESHIP STANDARDS")]
        public virtual void AC5_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_1_10MostDeprivedFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORKTheProviderIncentiveForThisPostcodeGroupIs600SplitEquallyInto2PaymentsAt90And365Days_INELIGIBLEFORAPPRENTICESHIPSTANDARDS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"AC5- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 1-10% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK The provider incentive for this postcode group is �600 split equally into 2 payments at 90 and 365 days. INELIGIBLE FOR APPRENTICESHIP STANDARDS", ((string[])(null)));
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table15.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "1-10%"});
#line 125
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table16.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1300",
                        "1000",
                        "...",
                        "1000",
                        "300",
                        "0"});
            table16.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "1200",
                        "...",
                        "900",
                        "900",
                        "300"});
            table16.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table16.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "300",
                        "0",
                        "...",
                        "0",
                        "300",
                        "0"});
            table16.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 128
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table17.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table17.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table17.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table17.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "300",
                        "...",
                        "0",
                        "300"});
#line 139
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC6- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 11-2" +
            "0% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP" +
            " FRAMEWORK")]
        public virtual void AC6_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_11_20MostDeprivedFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC6- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 11-2" +
                    "0% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP" +
                    " FRAMEWORK", ((string[])(null)));
#line 146
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table18.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "11-20%"});
#line 148
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table19.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1150",
                        "1000",
                        "...",
                        "1000",
                        "150",
                        "0"});
            table19.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "1050",
                        "...",
                        "900",
                        "900",
                        "150"});
            table19.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table19.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "150",
                        "0",
                        "...",
                        "0",
                        "150",
                        "0"});
            table19.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 152
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table20.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table20.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table20.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table20.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "150",
                        "...",
                        "0",
                        "150"});
#line 163
      testRunner.And("the transaction types for the payments are:", ((string)(null)), table20, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC7- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 21-2" +
            "7% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP" +
            " FRAMEWORK")]
        public virtual void AC7_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_21_27MostDeprivedFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC7- Payment for a non-DAS learner, lives in a disadvantaged postocde area - 21-2" +
                    "7% most deprived, funding agreed within band maximum, UNDERTAKING APPRENTICESHIP" +
                    " FRAMEWORK", ((string[])(null)));
#line 170
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table21.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "20-27%"});
#line 172
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table22.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1100",
                        "1000",
                        "...",
                        "1000",
                        "100",
                        "0"});
            table22.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "1000",
                        "...",
                        "900",
                        "900",
                        "100"});
            table22.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table22.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table22.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table22.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table22.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table22.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "100",
                        "0",
                        "...",
                        "0",
                        "100",
                        "0"});
            table22.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 175
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table23.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table23.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table23.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table23.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "100",
                        "...",
                        "0",
                        "100"});
#line 186
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table23, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC8- Payment for a non-DAS learner, does not live in a disadvantaged postcode are" +
            "a - no uplift earned, despite them doing a framework")]
        public virtual void AC8_PaymentForANon_DASLearnerDoesNotLiveInADisadvantagedPostcodeArea_NoUpliftEarnedDespiteThemDoingAFramework()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC8- Payment for a non-DAS learner, does not live in a disadvantaged postcode are" +
                    "a - no uplift earned, despite them doing a framework", ((string[])(null)));
#line 193
 this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table24.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "not deprived"});
#line 195
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table24, "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table25.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table25.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table25.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table25.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 198
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table25, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table26.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table26.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table26.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table26.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 209
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table26, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("589-AC01- Maths and English payments for a non-das learner finishing on time, fun" +
            "ding agreed within band maximum, planned duration is same as programme (assumes " +
            "both start and finish at same time)")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishNonDas")]
        public virtual void _589_AC01_MathsAndEnglishPaymentsForANon_DasLearnerFinishingOnTimeFundingAgreedWithinBandMaximumPlannedDurationIsSameAsProgrammeAssumesBothStartAndFinishAtSameTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("589-AC01- Maths and English payments for a non-das learner finishing on time, fun" +
                    "ding agreed within band maximum, planned duration is same as programme (assumes " +
                    "both start and finish at same time)", new string[] {
                        "MathsAndEnglishNonDas"});
#line 218
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table27.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "programme",
                        "",
                        "563",
                        "21",
                        "2"});
            table27.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "maths or english",
                        "471",
                        "563",
                        "21",
                        "2"});
#line 219
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table27, "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table28.AddRow(new string[] {
                        "Provider Earned Total",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "939.25",
                        "939.25",
                        "939.25",
                        "939.25",
                        "939.25",
                        "...",
                        "939.25",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "939.25",
                        "939.25",
                        "939.25",
                        "939.25",
                        "...",
                        "939.25",
                        "939.25",
                        "0"});
            table28.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table28.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0"});
#line 223
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table28, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table29.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table29.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "English and maths on programme",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
            table29.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 235
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("589-AC2- Maths and English payments for a das learner finishing on time, funding " +
            "agreed within band maximum, planned duration is same as programme (assumes both " +
            "start and finish at same time)")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _589_AC2_MathsAndEnglishPaymentsForADasLearnerFinishingOnTimeFundingAgreedWithinBandMaximumPlannedDurationIsSameAsProgrammeAssumesBothStartAndFinishAtSameTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("589-AC2- Maths and English payments for a das learner finishing on time, funding " +
                    "agreed within band maximum, planned duration is same as programme (assumes both " +
                    "start and finish at same time)", new string[] {
                        "MathsAndEnglishDas"});
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "status",
                        "effective from",
                        "effective to"});
            table30.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "403",
                        "2",
                        "1",
                        "active",
                        "01/08/2017",
                        ""});
#line 250
    testRunner.And("the following commitments exist:", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim type",
                        "aim rate",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table31.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "programme",
                        "",
                        "403",
                        "2",
                        "1"});
            table31.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "maths or english",
                        "471",
                        "403",
                        "2",
                        "1"});
#line 253
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table31, "When ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table32.AddRow(new string[] {
                        "Provider Earned Total",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "1039.25",
                        "0"});
            table32.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table32.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0"});
            table32.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 257
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table32, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table33.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table33.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table33.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table33.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table33.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table33.AddRow(new string[] {
                        "English and maths on programme",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
            table33.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 269
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table33, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC11- Payment for a DAS learner, lives in a disadvantaged postocde area - 01-10% " +
            "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
            "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK")]
        public virtual void AC11_PaymentForADASLearnerLivesInADisadvantagedPostocdeArea_01_10MostDeprivedEmployerHasSufficientLevyFundsInAccountFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC11- Payment for a DAS learner, lives in a disadvantaged postocde area - 01-10% " +
                    "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
                    "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK", ((string[])(null)));
#line 280
this.ScenarioSetup(scenarioInfo);
#line 282
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status"});
            table34.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "403",
                        "2",
                        "1",
                        "15000",
                        "active"});
#line 283
    testRunner.And("the following commitments exist:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table35.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "1-10%"});
#line 286
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table35, "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table36.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1300",
                        "1000",
                        "...",
                        "1000",
                        "300",
                        "0"});
            table36.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1300",
                        "...",
                        "1000",
                        "1000",
                        "300"});
            table36.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table36.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table36.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table36.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table36.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table36.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table36.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "300",
                        "0",
                        "...",
                        "0",
                        "300",
                        "0"});
#line 289
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table36, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table37.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table37.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table37.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table37.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "300",
                        "...",
                        "0",
                        "300"});
#line 300
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table37, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC12- Payment for a DAS learner, lives in a disadvantaged postocde area - 11-20% " +
            "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
            "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK")]
        public virtual void AC12_PaymentForADASLearnerLivesInADisadvantagedPostocdeArea_11_20MostDeprivedEmployerHasSufficientLevyFundsInAccountFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC12- Payment for a DAS learner, lives in a disadvantaged postocde area - 11-20% " +
                    "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
                    "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK", ((string[])(null)));
#line 307
this.ScenarioSetup(scenarioInfo);
#line 309
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status"});
            table38.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "403",
                        "2",
                        "1",
                        "15000",
                        "active"});
#line 310
    testRunner.And("the following commitments exist:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table39.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "11-20%"});
#line 313
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table39, "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table40.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1150",
                        "1000",
                        "...",
                        "1000",
                        "150",
                        "0"});
            table40.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1150",
                        "...",
                        "1000",
                        "1000",
                        "150"});
            table40.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table40.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table40.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table40.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table40.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table40.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table40.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "150",
                        "0",
                        "...",
                        "0",
                        "150",
                        "0"});
#line 316
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table40, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table41.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table41.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table41.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table41.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "150",
                        "...",
                        "0",
                        "150"});
#line 327
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC13- Payment for a DAS learner, lives in a disadvantaged postocde area - 21-27% " +
            "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
            "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK")]
        public virtual void AC13_PaymentForADASLearnerLivesInADisadvantagedPostocdeArea_21_27MostDeprivedEmployerHasSufficientLevyFundsInAccountFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC13- Payment for a DAS learner, lives in a disadvantaged postocde area - 21-27% " +
                    "most deprived, employer has sufficient levy funds in account, funding agreed wit" +
                    "hin band maximum, UNDERTAKING APPRENTICESHIP FRAMEWORK", ((string[])(null)));
#line 335
this.ScenarioSetup(scenarioInfo);
#line 337
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status"});
            table42.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "403",
                        "2",
                        "1",
                        "15000",
                        "active"});
#line 338
    testRunner.And("the following commitments exist:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table43.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "20-27%"});
#line 342
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table43, "When ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table44.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1100",
                        "1000",
                        "...",
                        "1000",
                        "100",
                        "0"});
            table44.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1100",
                        "...",
                        "1000",
                        "1000",
                        "100"});
            table44.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table44.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table44.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table44.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table44.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table44.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table44.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "100",
                        "0",
                        "...",
                        "0",
                        "100",
                        "0"});
#line 346
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table44, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table45.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table45.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table45.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table45.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "100",
                        "...",
                        "0",
                        "100"});
#line 357
  testRunner.And("the transaction types for the payments are:", ((string)(null)), table45, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC14- Payment for a DAS learner, does not live in a disadvantaged postocde area -" +
            " employer has sufficient levy funds in account, funding agreed within band maxim" +
            "um, UNDERTAKING APPRENTICESHIP FRAMEWORK")]
        public virtual void AC14_PaymentForADASLearnerDoesNotLiveInADisadvantagedPostocdeArea_EmployerHasSufficientLevyFundsInAccountFundingAgreedWithinBandMaximumUNDERTAKINGAPPRENTICESHIPFRAMEWORK()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC14- Payment for a DAS learner, does not live in a disadvantaged postocde area -" +
                    " employer has sufficient levy funds in account, funding agreed within band maxim" +
                    "um, UNDERTAKING APPRENTICESHIP FRAMEWORK", ((string[])(null)));
#line 364
this.ScenarioSetup(scenarioInfo);
#line 366
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status"});
            table46.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "403",
                        "2",
                        "1",
                        "15000",
                        "active"});
#line 367
    testRunner.And("the following commitments exist:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "home postcode deprivation"});
            table47.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1",
                        "not deprived"});
#line 370
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table47, "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table48.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table48.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table48.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table48.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 373
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table48, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table49.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table49.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table49.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table49.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 384
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table49, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("624-AC01-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
            "1-10% most deprived, funding agreed within band maximum, undertaking apprentices" +
            "hip standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsNonDasForStandard")]
        public virtual void _624_AC01_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_1_10MostDeprivedFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("624-AC01-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
                    "1-10% most deprived, funding agreed within band maximum, undertaking apprentices" +
                    "hip standard", new string[] {
                        "DisadvantageUpliftsNonDasForStandard"});
#line 393
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table50.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "1-10%"});
#line 394
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table50, "When ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table51.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table51.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table51.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table51.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 397
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table51, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table52.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table52.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table52.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table52.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 408
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table52, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("624-AC02-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
            "11-20% most deprived, funding agreed within band maximum, undertaking apprentice" +
            "ship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsNonDasForStandard")]
        public virtual void _624_AC02_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_11_20MostDeprivedFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("624-AC02-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
                    "11-20% most deprived, funding agreed within band maximum, undertaking apprentice" +
                    "ship standard", new string[] {
                        "DisadvantageUpliftsNonDasForStandard"});
#line 417
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table53.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "11-20%"});
#line 418
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table53, "When ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table54.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table54.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table54.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table54.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 421
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table54, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table55.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table55.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table55.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table55.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 432
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table55, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("624-AC03-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
            "21-27% most deprived, funding agreed within band maximum, undertaking apprentice" +
            "ship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsNonDasForStandard")]
        public virtual void _624_AC03_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_21_27MostDeprivedFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("624-AC03-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
                    "21-27% most deprived, funding agreed within band maximum, undertaking apprentice" +
                    "ship standard", new string[] {
                        "DisadvantageUpliftsNonDasForStandard"});
#line 441
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table56.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "21-27%"});
#line 442
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table56, "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table57.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table57.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table57.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table57.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 445
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table57, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table58.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table58.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table58.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table58.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 456
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table58, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("624-AC04-Payment for a non-DAS learner, does not live in a disadvantaged postocde" +
            " area, funding agreed within band maximum, undertaking apprenticeship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsNonDasForStandard")]
        public virtual void _624_AC04_PaymentForANon_DASLearnerDoesNotLiveInADisadvantagedPostocdeAreaFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("624-AC04-Payment for a non-DAS learner, does not live in a disadvantaged postocde" +
                    " area, funding agreed within band maximum, undertaking apprenticeship standard", new string[] {
                        "DisadvantageUpliftsNonDasForStandard"});
#line 465
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table59.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "not deprived"});
#line 466
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table59, "When ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table60.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table60.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table60.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table60.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 469
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table60, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table61.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table61.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table61.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table61.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 480
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table61, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("625-AC01-Payment for a DAS learner, lives in a disadvantaged postocde area - 1-10" +
            "% most deprived, funding agreed within band maximum, undertaking apprenticeship " +
            "standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsDasForStandard")]
        public virtual void _625_AC01_PaymentForADASLearnerLivesInADisadvantagedPostocdeArea_1_10MostDeprivedFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("625-AC01-Payment for a DAS learner, lives in a disadvantaged postocde area - 1-10" +
                    "% most deprived, funding agreed within band maximum, undertaking apprenticeship " +
                    "standard", new string[] {
                        "DisadvantageUpliftsDasForStandard"});
#line 489
this.ScenarioSetup(scenarioInfo);
#line 490
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status"});
            table62.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "50",
                        "15000",
                        "active"});
#line 491
    testRunner.And("the following commitments exist:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table63.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "1-10%"});
#line 494
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table63, "When ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table64.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table64.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table64.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table64.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 497
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table64, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table65.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table65.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table65.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table65.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 508
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table65, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("625-AC02-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
            "11-20% most deprived, funding agreed within band maximum, undertaking apprentice" +
            "ship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsDasForStandard")]
        public virtual void _625_AC02_PaymentForANon_DASLearnerLivesInADisadvantagedPostocdeArea_11_20MostDeprivedFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("625-AC02-Payment for a non-DAS learner, lives in a disadvantaged postocde area - " +
                    "11-20% most deprived, funding agreed within band maximum, undertaking apprentice" +
                    "ship standard", new string[] {
                        "DisadvantageUpliftsDasForStandard"});
#line 517
this.ScenarioSetup(scenarioInfo);
#line 518
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status"});
            table66.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "50",
                        "15000",
                        "active"});
#line 519
    testRunner.And("the following commitments exist:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table67.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "11-20%"});
#line 522
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table67, "When ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table68.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table68.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table68.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table68.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 525
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table68, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table69.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table69.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table69.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table69.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 536
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table69, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("625-AC03-Payment for a DAS learner, lives in a disadvantaged postocde area - 01-1" +
            "0% most deprived, employer has sufficient levy funds in account, funding agreed " +
            "within band maximum, undertaking apprenticeship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsDasForStandard")]
        public virtual void _625_AC03_PaymentForADASLearnerLivesInADisadvantagedPostocdeArea_01_10MostDeprivedEmployerHasSufficientLevyFundsInAccountFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("625-AC03-Payment for a DAS learner, lives in a disadvantaged postocde area - 01-1" +
                    "0% most deprived, employer has sufficient levy funds in account, funding agreed " +
                    "within band maximum, undertaking apprenticeship standard", new string[] {
                        "DisadvantageUpliftsDasForStandard"});
#line 545
this.ScenarioSetup(scenarioInfo);
#line 546
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status"});
            table70.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "50",
                        "15000",
                        "active"});
#line 547
    testRunner.And("the following commitments exist:", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table71.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "21-27%"});
#line 550
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table71, "When ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table72.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table72.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table72.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table72.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 553
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table72, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table73.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table73.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table73.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table73.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 564
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table73, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("625-AC04-Payment for a non-DAS learner, does not live in a disadvantaged postocde" +
            " area, funding agreed within band maximum, undertaking apprenticeship standard")]
        [NUnit.Framework.CategoryAttribute("DisadvantageUpliftsDasForStandard")]
        public virtual void _625_AC04_PaymentForANon_DASLearnerDoesNotLiveInADisadvantagedPostocdeAreaFundingAgreedWithinBandMaximumUndertakingApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("625-AC04-Payment for a non-DAS learner, does not live in a disadvantaged postocde" +
                    " area, funding agreed within band maximum, undertaking apprenticeship standard", new string[] {
                        "DisadvantageUpliftsDasForStandard"});
#line 573
this.ScenarioSetup(scenarioInfo);
#line 574
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status"});
            table74.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "50",
                        "15000",
                        "active"});
#line 575
    testRunner.And("the following commitments exist:", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "home postcode deprivation"});
            table75.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "50",
                        "not deprived"});
#line 578
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table75, "When ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table76.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table76.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table76.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table76.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 581
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table76, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table77.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table77.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table77.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table77.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 592
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table77, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"590-AC01- 1 non-DAS Payment for a non-DAS learner, funding agreed within funding band maximum, with the planned duration the same as the programme duration (assumes both start at the same time), AND the learner completes the aim 1 month earlier than planned.")]
        public virtual void _590_AC01_1Non_DASPaymentForANon_DASLearnerFundingAgreedWithinFundingBandMaximumWithThePlannedDurationTheSameAsTheProgrammeDurationAssumesBothStartAtTheSameTimeANDTheLearnerCompletesTheAim1MonthEarlierThanPlanned_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"590-AC01- 1 non-DAS Payment for a non-DAS learner, funding agreed within funding band maximum, with the planned duration the same as the programme duration (assumes both start at the same time), AND the learner completes the aim 1 month earlier than planned.", ((string[])(null)));
#line 600
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table78.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "15000",
                        "",
                        "01/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
            table78.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "",
                        "471",
                        "01/08/2017",
                        "08/11/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 602
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table78, "When ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table79.AddRow(new string[] {
                        "Provider Earned Total",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "...",
                        "1031.40",
                        "94.20",
                        "0"});
            table79.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "931.40",
                        "931.40",
                        "931.40",
                        "931.40",
                        "...",
                        "931.40",
                        "931.40",
                        "94.20"});
            table79.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "0"});
            table79.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table79.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0",
                        "0"});
            table79.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table79.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "...",
                        "31.40",
                        "94.20",
                        "0"});
#line 606
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table79, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table80.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "0"});
            table80.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table80.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table80.AddRow(new string[] {
                        "English and maths on programme",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "...",
                        "31.40",
                        "0"});
            table80.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "94.20"});
#line 615
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table80, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("590-AC02- Payment for a* DAS learner*, funding agreed within band, with the plann" +
            "ed duration the same as the programme duration (assumes both start at same time)" +
            ", but learner completes aim 1 month early.")]
        public virtual void _590_AC02_PaymentForADASLearnerFundingAgreedWithinBandWithThePlannedDurationTheSameAsTheProgrammeDurationAssumesBothStartAtSameTimeButLearnerCompletesAim1MonthEarly_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("590-AC02- Payment for a* DAS learner*, funding agreed within band, with the plann" +
                    "ed duration the same as the programme duration (assumes both start at same time)" +
                    ", but learner completes aim 1 month early.", ((string[])(null)));
#line 624
this.ScenarioSetup(scenarioInfo);
#line 626
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "status",
                        "effective from",
                        "effective to"});
            table81.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "403",
                        "2",
                        "1",
                        "active",
                        "01/08/2017",
                        ""});
#line 627
    testRunner.And("the following commitments exist:", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table82.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "01/08/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "403",
                        "2",
                        "1"});
            table82.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "01/08/2017",
                        "08/11/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 630
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table82, "When ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table83.AddRow(new string[] {
                        "Provider Earned Total",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "...",
                        "1031.40",
                        "94.20",
                        "0"});
            table83.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "1031.40",
                        "...",
                        "1031.40",
                        "1031.40",
                        "94.20"});
            table83.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table83.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table83.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0"});
            table83.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table83.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "...",
                        "31.40",
                        "94.20",
                        "0"});
#line 634
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table83, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table84.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table84.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table84.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table84.AddRow(new string[] {
                        "English and maths on programme",
                        "31.40",
                        "31.40",
                        "31.40",
                        "31.40",
                        "...",
                        "31.40",
                        "0"});
            table84.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "94.20"});
            table84.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 643
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table84, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("581-AC01-Non DAS learner finishes early, price equals the funding band maximum, e" +
            "arns balancing and completion framework uplift payments. Assumes 15 month appren" +
            "ticeship and learner completes after 12 months.")]
        [NUnit.Framework.CategoryAttribute("FrameworkUpliftsForNonDasFinishingEarly")]
        public virtual void _581_AC01_NonDASLearnerFinishesEarlyPriceEqualsTheFundingBandMaximumEarnsBalancingAndCompletionFrameworkUpliftPayments_Assumes15MonthApprenticeshipAndLearnerCompletesAfter12Months_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("581-AC01-Non DAS learner finishes early, price equals the funding band maximum, e" +
                    "arns balancing and completion framework uplift payments. Assumes 15 month appren" +
                    "ticeship and learner completes after 12 months.", new string[] {
                        "FrameworkUpliftsForNonDasFinishingEarly"});
#line 654
this.ScenarioSetup(scenarioInfo);
#line 655
    testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table85.AddRow(new string[] {
                        "123456",
                        "16-18 programme only non-DAS",
                        "9000",
                        "06/08/2017",
                        "09/11/2018",
                        "09/08/2018",
                        "Completed",
                        "403",
                        "2",
                        "1"});
#line 656
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table85, "When ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table86.AddRow(new string[] {
                        "Provider Earned Total",
                        "576",
                        "576",
                        "576",
                        "1576",
                        "576",
                        "...",
                        "576",
                        "576",
                        "4888",
                        "0"});
            table86.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "528",
                        "528",
                        "528",
                        "1528",
                        "528",
                        "...",
                        "528",
                        "528",
                        "4564",
                        "0"});
            table86.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "48",
                        "48",
                        "48",
                        "48",
                        "48",
                        "...",
                        "48",
                        "48",
                        "324",
                        "0"});
            table86.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "528",
                        "528",
                        "528",
                        "1528",
                        "...",
                        "528",
                        "528",
                        "528",
                        "4564"});
            table86.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "48",
                        "48",
                        "48",
                        "48",
                        "...",
                        "48",
                        "48",
                        "48",
                        "324"});
            table86.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table86.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table86.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table86.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "432",
                        "432",
                        "432",
                        "432",
                        "432",
                        "...",
                        "432",
                        "432",
                        "2916",
                        "0"});
            table86.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "96",
                        "96",
                        "96",
                        "1096",
                        "96",
                        "...",
                        "96",
                        "96",
                        "1648",
                        "0"});
#line 659
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table86, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table87.AddRow(new string[] {
                        "On-program",
                        "0",
                        "432",
                        "432",
                        "432",
                        "432",
                        "...",
                        "432",
                        "432",
                        "432",
                        "0"});
            table87.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1620"});
            table87.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1296"});
            table87.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table87.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table87.AddRow(new string[] {
                        "Framework uplift on-program",
                        "0",
                        "96",
                        "96",
                        "96",
                        "96",
                        "...",
                        "96",
                        "96",
                        "96",
                        "0"});
            table87.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "360"});
            table87.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "288"});
            table87.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 671
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table87, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("581-AC02-Non DAS learner finishes early, price lower than the funding band maximu" +
            "m, earns balancing and completion framework uplift payments. Assumes 15 month ap" +
            "prenticeship and learner completes after 12 months.")]
        [NUnit.Framework.CategoryAttribute("FrameworkUpliftsForNonDasFinishingEarly")]
        public virtual void _581_AC02_NonDASLearnerFinishesEarlyPriceLowerThanTheFundingBandMaximumEarnsBalancingAndCompletionFrameworkUpliftPayments_Assumes15MonthApprenticeshipAndLearnerCompletesAfter12Months_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("581-AC02-Non DAS learner finishes early, price lower than the funding band maximu" +
                    "m, earns balancing and completion framework uplift payments. Assumes 15 month ap" +
                    "prenticeship and learner completes after 12 months.", new string[] {
                        "FrameworkUpliftsForNonDasFinishingEarly"});
#line 685
this.ScenarioSetup(scenarioInfo);
#line 686
    testRunner.Given("the apprenticeship funding band maximum is 9000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table88.AddRow(new string[] {
                        "123456",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "09/11/2018",
                        "09/08/2018",
                        "Completed",
                        "403",
                        "2",
                        "1"});
#line 687
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table88, "When ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table89.AddRow(new string[] {
                        "Provider Earned Total",
                        "496",
                        "496",
                        "496",
                        "1496",
                        "496",
                        "...",
                        "496",
                        "496",
                        "4348",
                        "0"});
            table89.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "456",
                        "456",
                        "456",
                        "1456",
                        "456",
                        "...",
                        "456",
                        "456",
                        "4078",
                        "0"});
            table89.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "40",
                        "40",
                        "40",
                        "40",
                        "40",
                        "...",
                        "40",
                        "40",
                        "270",
                        "0"});
            table89.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "456",
                        "456",
                        "456",
                        "1456",
                        "...",
                        "456",
                        "456",
                        "456",
                        "4078"});
            table89.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "40",
                        "40",
                        "40",
                        "40",
                        "...",
                        "40",
                        "40",
                        "40",
                        "270"});
            table89.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table89.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table89.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0"});
            table89.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "360",
                        "360",
                        "360",
                        "360",
                        "360",
                        "...",
                        "360",
                        "360",
                        "2430",
                        "0"});
            table89.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "96",
                        "96",
                        "96",
                        "1096",
                        "96",
                        "...",
                        "96",
                        "96",
                        "1648",
                        "0"});
#line 690
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table89, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18"});
            table90.AddRow(new string[] {
                        "On-program",
                        "0",
                        "360",
                        "360",
                        "360",
                        "360",
                        "...",
                        "360",
                        "360",
                        "360",
                        "0"});
            table90.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1350"});
            table90.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "1080"});
            table90.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table90.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "0",
                        "0",
                        "500"});
            table90.AddRow(new string[] {
                        "Framework uplift on-program",
                        "0",
                        "96",
                        "96",
                        "96",
                        "96",
                        "...",
                        "96",
                        "96",
                        "96",
                        "0"});
            table90.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "360"});
            table90.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "288"});
            table90.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 702
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table90, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("591-AC01 Payment for a non -DAS learner, funding agreed within band maximum, plan" +
            "ned duration is same as programme (assumes both start and finish at same time).")]
        public virtual void _591_AC01PaymentForANon_DASLearnerFundingAgreedWithinBandMaximumPlannedDurationIsSameAsProgrammeAssumesBothStartAndFinishAtSameTime_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("591-AC01 Payment for a non -DAS learner, funding agreed within band maximum, plan" +
                    "ned duration is same as programme (assumes both start and finish at same time).", ((string[])(null)));
#line 715
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table91.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "15000",
                        "01/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
            table91.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "",
                        "01/08/2017",
                        "08/08/2018",
                        "08/11/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 717
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table91, "When ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18",
                        "12/18"});
            table92.AddRow(new string[] {
                        "Provider Earned Total",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "3000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "939.25",
                        "939.25",
                        "939.25",
                        "939.25",
                        "...",
                        "939.25",
                        "939.25",
                        "2700",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0",
                        "0",
                        "0",
                        "0"});
            table92.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 721
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table92, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table93.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0",
                        "0",
                        "0"});
            table93.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "2700",
                        "0",
                        "0"});
            table93.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table93.AddRow(new string[] {
                        "English and maths on programme",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "39.25",
                        "0",
                        "0",
                        "0"});
            table93.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 730
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table93, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("591_AC02- Payment for a DAS learner, funding agreed within band maximum, planned " +
            "duration is same as programme (assumes both start and finish at same time).")]
        public virtual void _591_AC02_PaymentForADASLearnerFundingAgreedWithinBandMaximumPlannedDurationIsSameAsProgrammeAssumesBothStartAndFinishAtSameTime_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("591_AC02- Payment for a DAS learner, funding agreed within band maximum, planned " +
                    "duration is same as programme (assumes both start and finish at same time).", ((string[])(null)));
#line 739
this.ScenarioSetup(scenarioInfo);
#line 742
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "status",
                        "effective from",
                        "effective to"});
            table94.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "403",
                        "2",
                        "1",
                        "active",
                        "01/08/2017",
                        ""});
#line 743
    testRunner.And("the following commitments exist:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table95.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "01/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
            table95.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "01/08/2017",
                        "08/08/2018",
                        "08/11/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 746
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table95, "When ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18",
                        "12/18"});
            table96.AddRow(new string[] {
                        "Provider Earned Total",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "3000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "1039.25",
                        "...",
                        "1039.25",
                        "1039.25",
                        "3000",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table96.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 750
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table96, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18",
                        "12/18"});
            table97.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0"});
            table97.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "3000",
                        "0",
                        "0",
                        "0"});
            table97.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table97.AddRow(new string[] {
                        "English and maths on programme",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "39.25",
                        "0",
                        "0",
                        "0",
                        "0"});
            table97.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table97.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 759
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table97, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("637-AC01-Payment for a non-DAS learner, requires learning support, doing an appre" +
            "nticeship framework")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _637_AC01_PaymentForANon_DASLearnerRequiresLearningSupportDoingAnApprenticeshipFramework()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("637-AC01-Payment for a non-DAS learner, requires learning support, doing an appre" +
                    "nticeship framework", new string[] {
                        "LearningSupport"});
#line 770
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table98.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "10/08/2018",
                        "completed",
                        "563",
                        "21",
                        "2"});
#line 771
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table98, "When ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table99.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "10/08/2018"});
#line 774
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table100.AddRow(new string[] {
                        "Provider Earned Total",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table100.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "...",
                        "1050",
                        "2700",
                        "0"});
            table100.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "300",
                        "0"});
            table100.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "...",
                        "1050",
                        "1050",
                        "2700"});
            table100.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300"});
            table100.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table100.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table100.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table100.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
            table100.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "0",
                        "0"});
#line 777
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table100, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table101.AddRow(new string[] {
                        "On-program",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table101.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "2700"});
            table101.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table101.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table101.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table101.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table101.AddRow(new string[] {
                        "Provider learning support",
                        "0",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "0"});
#line 789
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table101, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("637-AC02-Payment for a non-DAS learner, requires learning support, doing an appre" +
            "nticeship standard")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _637_AC02_PaymentForANon_DASLearnerRequiresLearningSupportDoingAnApprenticeshipStandard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("637-AC02-Payment for a non-DAS learner, requires learning support, doing an appre" +
                    "nticeship standard", new string[] {
                        "LearningSupport"});
#line 801
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code"});
            table102.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "10/08/2018",
                        "completed",
                        "50"});
#line 802
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table102, "When ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table103.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "10/08/2018"});
#line 805
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table104.AddRow(new string[] {
                        "Provider Earned Total",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table104.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "...",
                        "1050",
                        "2700",
                        "0"});
            table104.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "300",
                        "0"});
            table104.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1050",
                        "1050",
                        "1050",
                        "1050",
                        "...",
                        "1050",
                        "1050",
                        "2700"});
            table104.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300"});
            table104.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table104.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table104.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table104.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
            table104.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "0",
                        "0"});
#line 808
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table104, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table105.AddRow(new string[] {
                        "On-program",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "0"});
            table105.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "2700"});
            table105.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table105.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table105.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table105.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table105.AddRow(new string[] {
                        "Provider learning support",
                        "0",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "0"});
#line 820
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table105, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("637-AC03-Payment for a DAS learner, requires learning support, doing an apprentic" +
            "eship framework")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _637_AC03_PaymentForADASLearnerRequiresLearningSupportDoingAnApprenticeshipFramework()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("637-AC03-Payment for a DAS learner, requires learning support, doing an apprentic" +
                    "eship framework", new string[] {
                        "LearningSupport"});
#line 832
this.ScenarioSetup(scenarioInfo);
#line 833
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "status"});
            table106.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "403",
                        "2",
                        "1",
                        "15000",
                        "active"});
#line 834
    testRunner.And("the following commitments exist:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table107.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "10/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 837
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table107, "When ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table108.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "10/08/2018"});
#line 840
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table109.AddRow(new string[] {
                        "Provider Earned Total",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table109.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table109.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table109.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "1150",
                        "3000"});
            table109.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table109.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
            table109.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
            table109.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table109.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table109.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "0",
                        "0"});
            table109.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 843
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table109, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table110.AddRow(new string[] {
                        "On-program",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table110.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "3000"});
            table110.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider learning support",
                        "0",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "0"});
#line 856
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table110, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("637-AC04-Payment for a DAS learner, requires learning support, doing an apprentic" +
            "eship framework")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _637_AC04_PaymentForADASLearnerRequiresLearningSupportDoingAnApprenticeshipFramework()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("637-AC04-Payment for a DAS learner, requires learning support, doing an apprentic" +
                    "eship framework", new string[] {
                        "LearningSupport"});
#line 868
this.ScenarioSetup(scenarioInfo);
#line 869
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status"});
            table111.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "50",
                        "15000",
                        "active"});
#line 870
    testRunner.And("the following commitments exist:", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code"});
            table112.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "15000",
                        "06/08/2017",
                        "08/08/2018",
                        "10/08/2018",
                        "completed",
                        "50"});
#line 873
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table112, "When ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table113.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "10/08/2018"});
#line 876
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table114.AddRow(new string[] {
                        "Provider Earned Total",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "3000",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1150",
                        "1150",
                        "1150",
                        "1150",
                        "...",
                        "1150",
                        "1150",
                        "3000"});
            table114.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
            table114.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 879
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table114, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table115.AddRow(new string[] {
                        "On-program",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0"});
            table115.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "3000"});
            table115.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table115.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table115.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table115.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table115.AddRow(new string[] {
                        "Provider learning support",
                        "0",
                        "150",
                        "150",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "0"});
#line 892
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table115, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("638-AC01 Non-DAS learner, takes an English qualification that has a planned end d" +
            "ate that exceeds the actual end date of the programme aim")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishNonDas")]
        public virtual void _638_AC01Non_DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAim()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("638-AC01 Non-DAS learner, takes an English qualification that has a planned end d" +
                    "ate that exceeds the actual end date of the programme aim", new string[] {
                        "MathsAndEnglishNonDas"});
#line 904
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table116.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table116.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 906
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table116, "When ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table117.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "...",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "3033.64",
                        "33.64",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "933.64",
                        "933.64",
                        "...",
                        "933.64",
                        "933.64",
                        "933.64",
                        "933.64",
                        "2733.64",
                        "33.64",
                        "0"});
            table117.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "100",
                        "100",
                        "300",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "2700",
                        "0",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table117.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "33.64",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0",
                        "0"});
#line 910
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table117, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table118.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0",
                        "0",
                        "0"});
            table118.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "2700",
                        "0",
                        "0"});
            table118.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table118.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0"});
            table118.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 921
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table118, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("638-AC02 DAS learner, takes an English qualification that has a planned end date " +
            "that exceeds the actual end date of the programme aim")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _638_AC02DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAim()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("638-AC02 DAS learner, takes an English qualification that has a planned end date " +
                    "that exceeds the actual end date of the programme aim", new string[] {
                        "MathsAndEnglishDas"});
#line 930
this.ScenarioSetup(scenarioInfo);
#line 931
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table119.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active"});
#line 932
 testRunner.And("the following commitments exist:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table120.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table120.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 935
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table120, "When ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table121.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "English and maths on programme",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table121.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 939
 testRunner.Then("the data lock status will be as follows:", ((string)(null)), table121, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table122.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "...",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "3033.64",
                        "33.64",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.64",
                        "1033.64",
                        "...",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "3033.64",
                        "33.64",
                        "0"});
            table122.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "33.64",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 948
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table123.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table123.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "3000",
                        "0",
                        "0"});
            table123.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table123.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0"});
            table123.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 959
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table123, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("638-AC03 DAS learner, takes an English qualification that has a planned end date " +
            "that exceeds the actual end date of the programme aim - but the apprentice fails" +
            " data lock so no payments occur")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _638_AC03DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAim_ButTheApprenticeFailsDataLockSoNoPaymentsOccur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("638-AC03 DAS learner, takes an English qualification that has a planned end date " +
                    "that exceeds the actual end date of the programme aim - but the apprentice fails" +
                    " data lock so no payments occur", new string[] {
                        "MathsAndEnglishDas"});
#line 968
this.ScenarioSetup(scenarioInfo);
#line 969
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table124.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15500",
                        "active"});
#line 970
 testRunner.And("the following commitments exist:", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table125.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table125.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 973
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table125, "When ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table126.AddRow(new string[] {
                        "On-program",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table126.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 977
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table126, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table127.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "...",
                        "1033.64",
                        "1033.64",
                        "1033.64",
                        "3033.64",
                        "33.64",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table127.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 986
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table128.AddRow(new string[] {
                        "On-program",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table128.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table128.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table128.AddRow(new string[] {
                        "English and maths on programme",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table128.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 997
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table128, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("657-AC01 Non-DAS learner, takes an English qualification that has a planned end d" +
            "ate that exceeds the actual end date of the programme aim and learning support i" +
            "s applicable to all learning")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _657_AC01Non_DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAimAndLearningSupportIsApplicableToAllLearning()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("657-AC01 Non-DAS learner, takes an English qualification that has a planned end d" +
                    "ate that exceeds the actual end date of the programme aim and learning support i" +
                    "s applicable to all learning", new string[] {
                        "LearningSupport"});
#line 1006
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table129.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table129.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 1008
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table129, "When ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table130.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1013
 testRunner.And("the learning support status of the ILR is:", ((string)(null)), table130, "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table131.AddRow(new string[] {
                        "Provider Earned Total",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "3183.64",
                        "183.64",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1083.64",
                        "1083.64",
                        "...",
                        "1083.64",
                        "1083.64",
                        "1083.64",
                        "1083.64",
                        "2883.64",
                        "183.64",
                        "0"});
            table131.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "100",
                        "100",
                        "300",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "2700",
                        "0",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table131.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "...",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "0",
                        "0"});
#line 1016
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table131, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table132.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0",
                        "0",
                        "0"});
            table132.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "2700",
                        "0",
                        "0"});
            table132.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table132.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0"});
            table132.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table132.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "0"});
#line 1027
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table132, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("657-AC02 DAS learner, takes an English qualification that has a planned end date " +
            "that exceeds the actual end date of the programme aim and learning support is ap" +
            "plicable for all learning")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _657_AC02DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAimAndLearningSupportIsApplicableForAllLearning()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("657-AC02 DAS learner, takes an English qualification that has a planned end date " +
                    "that exceeds the actual end date of the programme aim and learning support is ap" +
                    "plicable for all learning", new string[] {
                        "LearningSupport"});
#line 1038
this.ScenarioSetup(scenarioInfo);
#line 1039
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table133.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active"});
#line 1040
 testRunner.And("the following commitments exist:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table134.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table134.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 1043
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table134, "When ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table135.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1047
 testRunner.And("the learning support status of the ILR is:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table136.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "Provider learning support",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "English and maths on programme",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table136.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1050
 testRunner.Then("the data lock status will be as follows:", ((string)(null)), table136, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table137.AddRow(new string[] {
                        "Provider Earned Total",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "3183.64",
                        "183.64",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "3183.64",
                        "183.64",
                        "0"});
            table137.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "...",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "0",
                        "0"});
            table137.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 1059
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table138.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table138.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "3000",
                        "0",
                        "0"});
            table138.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table138.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0"});
            table138.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table138.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150",
                        "0"});
#line 1070
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table138, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("657-AC03 DAS learner, takes an English qualification that has a planned end date " +
            "that exceeds the actual end date of the programme aim and learning support is ap" +
            "plicable for all learning - but the apprentice fails data lock and so no payment" +
            "s are made")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _657_AC03DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAimAndLearningSupportIsApplicableForAllLearning_ButTheApprenticeFailsDataLockAndSoNoPaymentsAreMade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("657-AC03 DAS learner, takes an English qualification that has a planned end date " +
                    "that exceeds the actual end date of the programme aim and learning support is ap" +
                    "plicable for all learning - but the apprentice fails data lock and so no payment" +
                    "s are made", new string[] {
                        "LearningSupport"});
#line 1080
this.ScenarioSetup(scenarioInfo);
#line 1081
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table139.AddRow(new string[] {
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15500",
                        "active"});
#line 1082
 testRunner.And("the following commitments exist:", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table140.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table140.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 1085
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table140, "When ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table141.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1089
 testRunner.And("the learning support status of the ILR is:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table142.AddRow(new string[] {
                        "On-program",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table142.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1092
 testRunner.Then("the data lock status will be as follows:", ((string)(null)), table142, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table143.AddRow(new string[] {
                        "Provider Earned Total",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "3183.64",
                        "183.64",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table143.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 1102
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table143, "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table144.AddRow(new string[] {
                        "On-program",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table144.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table144.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table144.AddRow(new string[] {
                        "English and maths on programme",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table144.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 1113
      testRunner.And("the transaction types for the payments are:", ((string)(null)), table144, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"658-AC01 DAS learner, takes an English qualification that has a planned end date that exceeds the actual end date of the programme aim and learning support is applicable for all learning. The learning is split into tow price episodes, and the second price episode fails data lock - the English and learning support payments are not paid after the point at which data lock fails.")]
        [NUnit.Framework.CategoryAttribute("LearningSupport")]
        public virtual void _658_AC01DASLearnerTakesAnEnglishQualificationThatHasAPlannedEndDateThatExceedsTheActualEndDateOfTheProgrammeAimAndLearningSupportIsApplicableForAllLearning_TheLearningIsSplitIntoTowPriceEpisodesAndTheSecondPriceEpisodeFailsDataLock_TheEnglishAndLearningSupportPaymentsAreNotPaidAfterThePointAtWhichDataLockFails_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"658-AC01 DAS learner, takes an English qualification that has a planned end date that exceeds the actual end date of the programme aim and learning support is applicable for all learning. The learning is split into tow price episodes, and the second price episode fails data lock - the English and learning support payments are not paid after the point at which data lock fails.", new string[] {
                        "LearningSupport"});
#line 1123
this.ScenarioSetup(scenarioInfo);
#line 1124
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table145.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/06/2018"});
            table145.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "14000",
                        "cancelled",
                        "11/06/2018",
                        ""});
#line 1125
 testRunner.And("the following commitments exist:", ((string)(null)), table145, "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "agreed price",
                        "aim rate",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
            table146.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "15000",
                        "",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed"});
            table146.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "",
                        "471",
                        "06/08/2017",
                        "06/10/2018",
                        "06/10/2018",
                        "completed"});
#line 1129
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table146, "When ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table147.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1133
 testRunner.And("the learning support status of the ILR is:", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table148.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table148.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table148.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table148.AddRow(new string[] {
                        "Provider learning support",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table148.AddRow(new string[] {
                        "English and maths on programme",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "...",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table148.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1136
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table148, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table149.AddRow(new string[] {
                        "Provider Earned Total",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "1183.64",
                        "3183.64",
                        "183.64",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1183.64",
                        "1183.64",
                        "...",
                        "1183.64",
                        "1183.64",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "...",
                        "183.64",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 1144
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table150.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table150.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table150.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table150.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "...",
                        "33.64",
                        "33.64",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table150.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table150.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "...",
                        "150",
                        "150",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 1155
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table150, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("671-AC01 DAS learner, levy available, is taking an English or maths qualification" +
            ", has learning support and the negotiated price changes during the programme")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _671_AC01DASLearnerLevyAvailableIsTakingAnEnglishOrMathsQualificationHasLearningSupportAndTheNegotiatedPriceChangesDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("671-AC01 DAS learner, levy available, is taking an English or maths qualification" +
                    ", has learning support and the negotiated price changes during the programme", new string[] {
                        "MathsAndEnglishDas"});
#line 1165
this.ScenarioSetup(scenarioInfo);
#line 1166
    testRunner.Given("the apprenticeship funding band maximum is 18000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1167
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table151.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        "10/11/2017"});
            table151.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "6750",
                        "11/11/2017",
                        ""});
#line 1168
    testRunner.And("the following commitments exist:", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim rate",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table152.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "5400",
                        "11/11/2017",
                        "1350",
                        "11/11/2017"});
            table152.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "04/08/2017",
                        "06/10/2018",
                        "",
                        "continuing",
                        "471",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1173
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table152, "When ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table153.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1177
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table154.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table154.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table154.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table154.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table154.AddRow(new string[] {
                        "Provider learning support",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table154.AddRow(new string[] {
                        "English and maths on programme",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table154.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1181
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table154, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table155.AddRow(new string[] {
                        "Provider Earned Total",
                        "933.64",
                        "933.64",
                        "933.64",
                        "533.64",
                        "533.64",
                        "533.64"});
            table155.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "933.64",
                        "933.64",
                        "933.64",
                        "533.64",
                        "533.64",
                        "583.64"});
            table155.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table155.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "933.64",
                        "933.64",
                        "933.64",
                        "533.64",
                        "533.64"});
            table155.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table155.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "350",
                        "350"});
            table155.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "350",
                        "350",
                        "350"});
            table155.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table155.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64"});
#line 1190
  testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table156.AddRow(new string[] {
                        "On-program",
                        "750",
                        "750",
                        "750",
                        "350",
                        "350"});
            table156.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table156.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table156.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64"});
            table156.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table156.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150"});
#line 1201
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table156, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("671-AC02 Non-DAS learner, levy available, is taking an English or maths qualifica" +
            "tion, has learning support and the negotiated price changes during the programme" +
            "")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishNonDas")]
        public virtual void _671_AC02Non_DASLearnerLevyAvailableIsTakingAnEnglishOrMathsQualificationHasLearningSupportAndTheNegotiatedPriceChangesDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("671-AC02 Non-DAS learner, levy available, is taking an English or maths qualifica" +
                    "tion, has learning support and the negotiated price changes during the programme" +
                    "", new string[] {
                        "MathsAndEnglishNonDas"});
#line 1211
this.ScenarioSetup(scenarioInfo);
#line 1212
    testRunner.Given("the apprenticeship funding band maximum is 18000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim rate",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table157.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "5400",
                        "11/11/2017",
                        "1350",
                        "11/11/2017"});
            table157.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "04/08/2017",
                        "06/10/2018",
                        "",
                        "continuing",
                        "471",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1214
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table157, "When ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table158.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1218
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table158, "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table159.AddRow(new string[] {
                        "Provider Earned Total",
                        "933.64",
                        "933.64",
                        "933.64",
                        "533.64",
                        "533.64",
                        "533.64"});
            table159.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "858.64",
                        "858.64",
                        "858.64",
                        "498.64",
                        "498.64",
                        "498.64"});
            table159.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "75",
                        "35",
                        "35",
                        "35"});
            table159.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "858.64",
                        "858.64",
                        "858.64",
                        "498.64",
                        "498.64"});
            table159.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "75",
                        "35",
                        "35"});
            table159.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "315",
                        "315",
                        "315"});
            table159.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64",
                        "183.64"});
#line 1222
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table159, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table160.AddRow(new string[] {
                        "On-program",
                        "675",
                        "675",
                        "675",
                        "315",
                        "315"});
            table160.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table160.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table160.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64",
                        "33.64"});
            table160.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table160.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "150",
                        "150",
                        "150"});
#line 1235
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table160, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("671-AC03 DAS learner, levy available, is taking an English or maths qualification" +
            ", has learning support and the negotiated price changes during the programme - n" +
            "o payments are made against the second price episode as it fails data lock")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _671_AC03DASLearnerLevyAvailableIsTakingAnEnglishOrMathsQualificationHasLearningSupportAndTheNegotiatedPriceChangesDuringTheProgramme_NoPaymentsAreMadeAgainstTheSecondPriceEpisodeAsItFailsDataLock()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("671-AC03 DAS learner, levy available, is taking an English or maths qualification" +
                    ", has learning support and the negotiated price changes during the programme - n" +
                    "o payments are made against the second price episode as it fails data lock", new string[] {
                        "MathsAndEnglishDas"});
#line 1245
this.ScenarioSetup(scenarioInfo);
#line 1246
    testRunner.Given("the apprenticeship funding band maximum is 18000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1247
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table161.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        "10/11/2017"});
            table161.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "6750",
                        "11/11/2017",
                        ""});
#line 1248
    testRunner.And("the following commitments exist:", ((string)(null)), table161, "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim rate",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table162.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "5400",
                        "09/11/2017",
                        "1350",
                        "09/11/2017"});
            table162.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "04/08/2017",
                        "06/10/2018",
                        "",
                        "continuing",
                        "471",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1253
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table162, "When ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learning support code",
                        "date from",
                        "date to"});
            table163.AddRow(new string[] {
                        "1",
                        "06/08/2017",
                        "06/10/2018"});
#line 1257
    testRunner.And("the learning support status of the ILR is:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table164.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "Provider learning support",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "English and maths on programme",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
            table164.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1261
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table164, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table165.AddRow(new string[] {
                        "Provider Earned Total",
                        "933.64",
                        "933.64",
                        "933.64",
                        "533.64",
                        "533.64",
                        "533.64"});
            table165.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "933.64",
                        "933.64",
                        "933.64",
                        "0",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "933.64",
                        "933.64",
                        "933.64",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table165.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "183.64",
                        "183.64",
                        "183.64",
                        "0",
                        "0",
                        "0"});
#line 1270
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table166.AddRow(new string[] {
                        "On-program",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0"});
            table166.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table166.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table166.AddRow(new string[] {
                        "English and maths on programme",
                        "33.64",
                        "33.64",
                        "33.64",
                        "0",
                        "0"});
            table166.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table166.AddRow(new string[] {
                        "Provider learning support",
                        "150",
                        "150",
                        "150",
                        "0",
                        "0"});
#line 1281
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table166, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("597_AC01 Non-DAS learner, fails their English or maths aim during their programme" +
            " and retakes it - the second instance of the aim goes beyond the actual end date" +
            " of the programme.")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishNonDas")]
        public virtual void _597_AC01Non_DASLearnerFailsTheirEnglishOrMathsAimDuringTheirProgrammeAndRetakesIt_TheSecondInstanceOfTheAimGoesBeyondTheActualEndDateOfTheProgramme_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("597_AC01 Non-DAS learner, fails their English or maths aim during their programme" +
                    " and retakes it - the second instance of the aim goes beyond the actual end date" +
                    " of the programme.", new string[] {
                        "MathsAndEnglishNonDas"});
#line 1293
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim rate",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table167.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "programme",
                        "06/08/2017",
                        "22/08/2018",
                        "22/08/2018",
                        "completed",
                        "",
                        "12000",
                        "06/08/2017",
                        "3000",
                        "06/08/2017"});
            table167.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "06/08/2017",
                        "08/06/2018",
                        "08/06/2018",
                        "completed",
                        "471",
                        "",
                        "",
                        "",
                        ""});
            table167.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "maths or english",
                        "09/06/2018",
                        "08/06/2019",
                        "08/06/2019",
                        "completed",
                        "471",
                        "",
                        "",
                        "",
                        ""});
#line 1294
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table167, "When ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "...",
                        "05/19",
                        "06/19",
                        "07/19"});
            table168.AddRow(new string[] {
                        "Provider Earned Total",
                        "1047.10",
                        "1047.10",
                        "1047.10",
                        "...",
                        "1047.10",
                        "1039.25",
                        "1039.25",
                        "3039.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "947.10",
                        "947.10",
                        "...",
                        "947.10",
                        "947.10",
                        "939.25",
                        "939.25",
                        "2739.25",
                        "...",
                        "39.25",
                        "39.25",
                        "0"});
            table168.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "100",
                        "100",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "100",
                        "100",
                        "300",
                        "...",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "2700",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "47.10",
                        "47.10",
                        "47.10",
                        "...",
                        "47.10",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0",
                        "0"});
#line 1300
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table168, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "...",
                        "06/19",
                        "07/19"});
            table169.AddRow(new string[] {
                        "On-program",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0",
                        "...",
                        "0",
                        "0"});
            table169.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "2700",
                        "...",
                        "0",
                        "0"});
            table169.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table169.AddRow(new string[] {
                        "English and maths on programme",
                        "47.10",
                        "47.10",
                        "...",
                        "47.10",
                        "47.10",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
            table169.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 1311
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table169, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("597_AC02 DAS learner, fails their English or maths aim during their programme and" +
            " retakes it - the second instance of the aim goes beyond the actual end date of " +
            "the programme.")]
        [NUnit.Framework.CategoryAttribute("MathsAndEnglishDas")]
        public virtual void _597_AC02DASLearnerFailsTheirEnglishOrMathsAimDuringTheirProgrammeAndRetakesIt_TheSecondInstanceOfTheAimGoesBeyondTheActualEndDateOfTheProgramme_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("597_AC02 DAS learner, fails their English or maths aim during their programme and" +
                    " retakes it - the second instance of the aim goes beyond the actual end date of " +
                    "the programme.", new string[] {
                        "MathsAndEnglishDas"});
#line 1321
this.ScenarioSetup(scenarioInfo);
#line 1322
 testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "end date",
                        "agreed price",
                        "status"});
            table170.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active"});
#line 1323
 testRunner.And("the following commitments exist:", ((string)(null)), table170, "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "aim type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "aim rate",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table171.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "programme",
                        "06/08/2017",
                        "22/08/2018",
                        "22/08/2018",
                        "completed",
                        "",
                        "12000",
                        "06/08/2017",
                        "3000",
                        "06/08/2017"});
            table171.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "06/08/2017",
                        "08/06/2018",
                        "08/06/2018",
                        "completed",
                        "471",
                        "",
                        "",
                        "",
                        ""});
            table171.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "maths or english",
                        "09/06/2018",
                        "08/06/2019",
                        "08/06/2019",
                        "completed",
                        "471",
                        "",
                        "",
                        "",
                        ""});
#line 1327
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table171, "When ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "...",
                        "05/19",
                        "06/19"});
            table172.AddRow(new string[] {
                        "Provider Earned Total",
                        "1047.10",
                        "1047.10",
                        "1047.10",
                        "...",
                        "1047.10",
                        "1039.25",
                        "1039.25",
                        "3039.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
            table172.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1047.10",
                        "1047.10",
                        "...",
                        "1047.10",
                        "1047.10",
                        "1039.25",
                        "1039.25",
                        "3039.25",
                        "...",
                        "39.25",
                        "39.25"});
            table172.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table172.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "...",
                        "0",
                        "0"});
            table172.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "3000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table172.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table172.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "47.10",
                        "47.10",
                        "47.10",
                        "...",
                        "47.10",
                        "39.25",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
#line 1333
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table172, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "...",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "...",
                        "06/19",
                        "07/19"});
            table173.AddRow(new string[] {
                        "On-program",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table173.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "3000",
                        "...",
                        "0",
                        "0"});
            table173.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table173.AddRow(new string[] {
                        "English and maths on programme",
                        "47.10",
                        "47.10",
                        "...",
                        "47.10",
                        "47.10",
                        "39.25",
                        "39.25",
                        "39.25",
                        "...",
                        "39.25",
                        "0"});
            table173.AddRow(new string[] {
                        "English and maths Balancing",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 1342
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table173, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
