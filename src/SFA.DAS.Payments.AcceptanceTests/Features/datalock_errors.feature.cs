// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Datalock produces correct errors when ILR does not match commitment")]
    public partial class DatalockProducesCorrectErrorsWhenILRDoesNotMatchCommitmentFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "datalock_errors.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Datalock produces correct errors when ILR does not match commitment", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When no matching record found in an employer digital account for for the agreed p" +
            "rice then datalock DLOCK_07 will be produced")]
        public virtual void WhenNoMatchingRecordFoundInAnEmployerDigitalAccountForForTheAgreedPriceThenDatalockDLOCK_07WillBeProduced()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When no matching record found in an employer digital account for for the agreed p" +
                    "rice then datalock DLOCK_07 will be produced", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date",
                        "end date",
                        "status",
                        "effective from"});
            table251.AddRow(new string[] {
                        "73",
                        "125",
                        "Provider a",
                        "learner a",
                        "450",
                        "2",
                        "1",
                        "10000",
                        "01/05/2017",
                        "01/05/2018",
                        "active",
                        "01/05/2017"});
#line 4
    testRunner.Given("the following commitments exist:", ((string)(null)), table251, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "start date",
                        "planned end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date"});
            table252.AddRow(new string[] {
                        "Provider a",
                        "learner a",
                        "450",
                        "2",
                        "1",
                        "01/05/2017",
                        "08/08/2018",
                        "continuing",
                        "10010",
                        "01/05/2017"});
#line 8
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table252, "When ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprenticeship Id",
                        "ULN",
                        "ILR Start Date",
                        "ILR Training Price",
                        "ILR End point assessment price"});
            table253.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "73",
                        "learner a",
                        "01/05/2017",
                        "9000",
                        "1010"});
#line 12
    testRunner.Then("the following data lock event is returned:", ((string)(null)), table253, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Error code",
                        "Error Description"});
            table254.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "DLOCK_07",
                        "No matching record found in the employer digital account for the negotiated cost " +
                            "of training"});
#line 15
    testRunner.And("the data lock event has the following errors:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Period",
                        "Payable Flag",
                        "Transaction Type"});
            table255.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "1617-R10",
                        "true",
                        "Learning"});
            table255.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "1617-R11",
                        "true",
                        "Learning"});
            table255.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "1617-R12",
                        "true",
                        "Learning"});
#line 18
    testRunner.And("the data lock event has the following periods", ((string)(null)), table255, "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprentice Version",
                        "Start Date",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Negotiated Price",
                        "Effective Date"});
            table256.AddRow(new string[] {
                        "2-450-1-01/05/2017",
                        "125",
                        "01/05/2017",
                        "450",
                        "2",
                        "1",
                        "10000",
                        "01/05/2017"});
#line 23
    testRunner.And("the data lock event used the following commitments", ((string)(null)), table256, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When no matching record found in an employer digital account for for the start da" +
            "te then datalock DLOCK_09 will be produced")]
        public virtual void WhenNoMatchingRecordFoundInAnEmployerDigitalAccountForForTheStartDateThenDatalockDLOCK_09WillBeProduced()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When no matching record found in an employer digital account for for the start da" +
                    "te then datalock DLOCK_09 will be produced", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "standard code",
                        "agreed price",
                        "start date",
                        "end date",
                        "status",
                        "effective from"});
            table257.AddRow(new string[] {
                        "73",
                        "125",
                        "Provider a",
                        "learner a",
                        "23",
                        "10000",
                        "01/06/2017",
                        "01/05/2018",
                        "active",
                        "01/06/2017"});
#line 30
    testRunner.Given("the following commitments exist:", ((string)(null)), table257, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table258.AddRow(new string[] {
                        "Provider a",
                        "learner a",
                        "23",
                        "01/05/2017",
                        "08/08/2018",
                        "continuing",
                        "9000",
                        "01/05/2017",
                        "1000",
                        "01/05/2017"});
#line 34
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table258, "When ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprenticeship Id",
                        "ULN",
                        "ILR Start Date",
                        "ILR Training Price",
                        "ILR End point assessment price"});
            table259.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "73",
                        "learner a",
                        "01/05/2017",
                        "9000",
                        "1000"});
#line 38
    testRunner.Then("the following data lock event is returned:", ((string)(null)), table259, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Error code",
                        "Error Description"});
            table260.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "DLOCK_09",
                        "The start date for this negotiated price is before the corresponding price start " +
                            "date in the employer digital account"});
#line 41
    testRunner.And("the data lock event has the following errors:", ((string)(null)), table260, "And ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Period",
                        "Payable Flag",
                        "Transaction Type"});
            table261.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "1617-R11",
                        "true",
                        "Learning"});
            table261.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "1617-R12",
                        "true",
                        "Learning"});
#line 44
    testRunner.And("the data lock event has the following periods", ((string)(null)), table261, "And ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprentice Version",
                        "Start Date",
                        "standard code",
                        "Negotiated Price",
                        "Effective Date"});
            table262.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "125",
                        "01/06/2017",
                        "23",
                        "10000",
                        "01/06/2017"});
#line 48
    testRunner.And("the data lock event used the following commitments", ((string)(null)), table262, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When no matching record found in an employer digital account for for the standard" +
            " then datalock DLOCK_03 will be produced")]
        public virtual void WhenNoMatchingRecordFoundInAnEmployerDigitalAccountForForTheStandardThenDatalockDLOCK_03WillBeProduced()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When no matching record found in an employer digital account for for the standard" +
                    " then datalock DLOCK_03 will be produced", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "standard code",
                        "agreed price",
                        "start date",
                        "end date",
                        "status",
                        "effective from"});
            table263.AddRow(new string[] {
                        "73",
                        "125",
                        "Provider a",
                        "learner a",
                        "21",
                        "10000",
                        "01/05/2017",
                        "01/05/2018",
                        "active",
                        "01/05/2017"});
#line 55
    testRunner.Given("the following commitments exist:", ((string)(null)), table263, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table264.AddRow(new string[] {
                        "Provider a",
                        "learner a",
                        "23",
                        "01/05/2017",
                        "08/08/2018",
                        "continuing",
                        "9000",
                        "01/05/2017",
                        "1000",
                        "01/05/2017"});
#line 59
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table264, "When ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprenticeship Id",
                        "ULN",
                        "ILR Start Date",
                        "ILR Training Price",
                        "ILR End point assessment price"});
            table265.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "73",
                        "learner a",
                        "01/05/2017",
                        "9000",
                        "1000"});
#line 63
    testRunner.Then("the following data lock event is returned:", ((string)(null)), table265, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Error code",
                        "Error Description"});
            table266.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "DLOCK_03",
                        "No matching record found in the employer digital account for the standard code"});
#line 66
    testRunner.And("the data lock event has the following errors:", ((string)(null)), table266, "And ");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Period",
                        "Payable Flag",
                        "Transaction Type"});
            table267.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "1617-R10",
                        "true",
                        "Learning"});
            table267.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "1617-R11",
                        "true",
                        "Learning"});
            table267.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "1617-R12",
                        "true",
                        "Learning"});
#line 69
    testRunner.And("the data lock event has the following periods", ((string)(null)), table267, "And ");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprentice Version",
                        "Start Date",
                        "standard code",
                        "Negotiated Price",
                        "Effective Date"});
            table268.AddRow(new string[] {
                        "25-23-01/05/2017",
                        "125",
                        "01/05/2017",
                        "21",
                        "10000",
                        "01/05/2017"});
#line 74
    testRunner.And("the data lock event used the following commitments", ((string)(null)), table268, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
