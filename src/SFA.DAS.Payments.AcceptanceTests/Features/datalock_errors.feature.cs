// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Datalock produces correct errors when ILR does not match commitment")]
    public partial class DatalockProducesCorrectErrorsWhenILRDoesNotMatchCommitmentFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "datalock_errors.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Datalock produces correct errors when ILR does not match commitment", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When no matching record found in an employer digital account for for the agreed p" +
            "rice then datalock DLOCK_07 will be produced")]
        public virtual void WhenNoMatchingRecordFoundInAnEmployerDigitalAccountForForTheAgreedPriceThenDatalockDLOCK_07WillBeProduced()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When no matching record found in an employer digital account for for the agreed p" +
                    "rice then datalock DLOCK_07 will be produced", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "standard code",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date",
                        "end date",
                        "status",
                        "effective from"});
            table251.AddRow(new string[] {
                        "73",
                        "125",
                        "Provider a",
                        "learner a",
                        "1",
                        "450",
                        "2",
                        "1",
                        "10000",
                        "01/05/2017",
                        "01/05/2018",
                        "active",
                        "01/05/2017"});
#line 4
    testRunner.Given("the following commitment exists for an apprentice:", ((string)(null)), table251, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "standard code",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date",
                        "completion status"});
            table252.AddRow(new string[] {
                        "Provider a",
                        "learner a",
                        "1",
                        "450",
                        "2",
                        "1",
                        "10010",
                        "01/05/2017",
                        "continuing"});
#line 8
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table252, "When ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprenticeship ID",
                        "ULN",
                        "ILR Start Date",
                        "ILR Training Price",
                        "ILR End point assessment price"});
            table253.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "73",
                        "learner a",
                        "01/05/2017",
                        "9000",
                        "1010"});
#line 12
    testRunner.Then("the following data lock event is returned:", ((string)(null)), table253, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Error code",
                        "Error Description"});
            table254.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "DLOCK_07",
                        "No matching record found in the employer digital account for the negotiated cost " +
                            "of training"});
#line 15
    testRunner.And("the data lock event has the following errors:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Period",
                        "Payable Flag",
                        "Transaction Type"});
            table255.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "1617-R10",
                        "false",
                        "Learning"});
            table255.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "1617-R11",
                        "false",
                        "Learning"});
            table255.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "1617-R12",
                        "false",
                        "Learning"});
#line 18
    testRunner.And("the data lock event has the following periods", ((string)(null)), table255, "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode identifier",
                        "Apprentice Version",
                        "Start Date",
                        "Course",
                        "Negotiated Price",
                        "Effective Date"});
            table256.AddRow(new string[] {
                        "450-2-1/05/2017",
                        "125",
                        "01/05/2017",
                        "450-2-1",
                        "10000",
                        "01/05/2017"});
#line 23
    testRunner.And("the data lock event used the following commitments", ((string)(null)), table256, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
