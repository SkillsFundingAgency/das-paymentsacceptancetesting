// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where learner changes apprenticeship standard or t" +
        "here is a change to the negotiated price at the end of a month, remaining with t" +
        "he same employer and provider")]
    [NUnit.Framework.CategoryAttribute("ChangeInCircumstances")]
    public partial class ProviderEarningsAndPaymentsWhereLearnerChangesApprenticeshipStandardOrThereIsAChangeToTheNegotiatedPriceAtTheEndOfAMonthRemainingWithTheSameEmployerAndProviderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "change_in_circumstances.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where learner changes apprenticeship standard or t" +
                    "here is a change to the negotiated price at the end of a month, remaining with t" +
                    "he same employer and provider", null, ProgrammingLanguage.CSharp, new string[] {
                        "ChangeInCircumstances"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
    #line 5
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes and data lock is passed in both instances")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesAndDataLockIsPassedInBothInstances()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes and data lock is passed in both instances", ((string[])(null)));
#line 9
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table183.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table183.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "03/11/2017",
                        ""});
#line 10
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table183, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table184.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "01/08/2018",
                        "31/10/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table184.AddRow(new string[] {
                        "learner a",
                        "52",
                        "03/11/2017",
                        "01/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 14
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table184, "When ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table185.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
#line 18
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table185, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table186.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table186.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table186.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table186.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table186.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table186.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 21
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table186, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ILR changes before second Commitment starts (i.e. there is only one existing Comm" +
            "itment in place)")]
        public virtual void ILRChangesBeforeSecondCommitmentStartsI_E_ThereIsOnlyOneExistingCommitmentInPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ILR changes before second Commitment starts (i.e. there is only one existing Comm" +
                    "itment in place)", ((string[])(null)));
#line 31
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price"});
            table187.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "15000"});
#line 32
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table187, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table188.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "01/08/2018",
                        "31/10/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table188.AddRow(new string[] {
                        "learner a",
                        "52",
                        "03/11/2017",
                        "01/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 35
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table188, "When ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table189.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
#line 39
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table189, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table190.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table190.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table190.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table190.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table190.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table190.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 42
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table190, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("New Commitment which is not reflected in the updated ILR submission (i.e. new Com" +
            "mitment but no corresponding change in the ILR).")]
        public virtual void NewCommitmentWhichIsNotReflectedInTheUpdatedILRSubmissionI_E_NewCommitmentButNoCorrespondingChangeInTheILR_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New Commitment which is not reflected in the updated ILR submission (i.e. new Com" +
                    "mitment but no corresponding change in the ILR).", ((string[])(null)));
#line 52
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table191.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "15000",
                        "03/08/2017",
                        "31/10/2017"});
            table191.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "03/08/2017",
                        "04/08/2018",
                        "5625",
                        "01/11/2017",
                        ""});
#line 53
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table191, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table192.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
#line 57
  testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table192, "When ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table193.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
#line 60
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table193, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table194.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table194.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table194.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table194.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table194.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table194.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 63
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table194, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice goes on a planned break midway through the learning episode and this i" +
            "s notified through the ILR")]
        public virtual void ApprenticeGoesOnAPlannedBreakMidwayThroughTheLearningEpisodeAndThisIsNotifiedThroughTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice goes on a planned break midway through the learning episode and this i" +
                    "s notified through the ILR", ((string[])(null)));
#line 73
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table195.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "active",
                        "15000",
                        "01/09/2017",
                        "31/10/2017"});
            table195.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "paused",
                        "15000",
                        "01/11/2017",
                        "02/01/2018"});
            table195.AddRow(new string[] {
                        "1",
                        "3",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "active",
                        "15000",
                        "03/01/2018",
                        ""});
#line 74
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table195, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table196.AddRow(new string[] {
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "31/10/2017",
                        "planned break",
                        "12000",
                        "01/09/2017",
                        "3000",
                        "01/09/2017"});
            table196.AddRow(new string[] {
                        "learner a",
                        "03/01/2018",
                        "08/11/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/01/2018",
                        "3000",
                        "03/01/2018"});
#line 79
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table196, "When ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "...",
                        "10/18",
                        "11/18"});
            table197.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table197.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "...",
                        "1000",
                        "1000"});
            table197.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "...",
                        "1000",
                        "1000"});
            table197.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
#line 83
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table197, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens at the end of the month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensAtTheEndOfTheMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens at the end of the month", ((string[])(null)));
#line 91
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table198.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table198.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 92
        testRunner.Given("the following commitments exist:", ((string)(null)), table198, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table199.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "01/11/2017",
                        "1875",
                        "01/11/2017"});
#line 96
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table199, "When ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18"});
            table200.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "...",
                        "commitment 1 v2"});
#line 99
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table200, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table201.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table201.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table201.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table201.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table201.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table201.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table201.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table201.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 102
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table201, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens in the middle of the month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensInTheMiddleOfTheMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens in the middle of the month", ((string[])(null)));
#line 114
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table202.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table202.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 115
        testRunner.Given("the following commitments exist:", ((string)(null)), table202, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table203.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "10/11/2017",
                        "1875",
                        "10/11/2017"});
#line 119
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table203, "When ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18"});
            table204.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "...",
                        "commitment 1 v2"});
#line 122
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table204, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table205.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table205.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table205.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table205.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table205.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table205.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table205.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table205.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 125
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table205, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens in the middle of the month and the ILR starts" +
            " earlier")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensInTheMiddleOfTheMonthAndTheILRStartsEarlier()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens in the middle of the month and the ILR starts" +
                    " earlier", ((string[])(null)));
#line 137
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table206.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table206.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 138
        testRunner.Given("the following commitments exist:", ((string)(null)), table206, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table207.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "24/10/2017",
                        "1875",
                        "24/10/2017"});
#line 142
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table207, "When ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table208.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "",
                        "...",
                        "",
                        ""});
#line 145
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table208, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table209.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "550",
                        "550",
                        "550",
                        "...",
                        "550",
                        "0"});
            table209.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table209.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 148
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table209, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost and the ILR is not updated")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostAndTheILRIsNotUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost and the ILR is not updated", ((string[])(null)));
#line 160
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table210.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table210.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 161
        testRunner.Given("the following commitments exist:", ((string)(null)), table210, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table211.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017"});
#line 165
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table211, "When ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table212.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        "...",
                        "",
                        ""});
#line 168
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table212, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table213.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table213.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table213.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 171
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table213, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes middle of month and data lock is passed in both instances")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesMiddleOfMonthAndDataLockIsPassedInBothInstances()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes middle of month and data lock is passed in both instances", ((string[])(null)));
#line 184
    this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table214.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table214.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 185
        testRunner.Given("the following commitments exist:", ((string)(null)), table214, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table215.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "10/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table215.AddRow(new string[] {
                        "learner a",
                        "52",
                        "11/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "11/11/2017",
                        "1125",
                        "11/11/2017"});
#line 189
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table215, "When ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table216.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
#line 194
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table216, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table217.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table217.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table217.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table217.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table217.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 198
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table217, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ILR changes standard in the middle of the month, but no corresponding change to t" +
            "he commitment is confirmed")]
        public virtual void ILRChangesStandardInTheMiddleOfTheMonthButNoCorrespondingChangeToTheCommitmentIsConfirmed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ILR changes standard in the middle of the month, but no corresponding change to t" +
                    "he commitment is confirmed", ((string[])(null)));
#line 206
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table218.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        ""});
#line 207
        testRunner.Given("the following commitments exist:", ((string)(null)), table218, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table219.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "10/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table219.AddRow(new string[] {
                        "learner a",
                        "52",
                        "11/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "11/11/2017",
                        "1125",
                        "11/11/2017"});
#line 210
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table219, "When ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table220.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
#line 215
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table220, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table221.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "500"});
            table221.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table221.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table221.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table221.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 219
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table221, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes middle of month A commitment is updated to show a change in st" +
            "andard, mid-month, but the ILR does not reflect this")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesMiddleOfMonthACommitmentIsUpdatedToShowAChangeInStandardMid_MonthButTheILRDoesNotReflectThis()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes middle of month A commitment is updated to show a change in st" +
                    "andard, mid-month, but the ILR does not reflect this", ((string[])(null)));
#line 227
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table222.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table222.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 228
        testRunner.Given("the following commitments exist:", ((string)(null)), table222, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table223.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
#line 232
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table223, "When ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table224.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "",
                        ""});
#line 236
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table224, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table225.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table225.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table225.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table225.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table225.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 240
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table225, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later wi" +
            "thin the same month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterWithinTheSameMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later wi" +
                    "thin the same month", ((string[])(null)));
#line 248
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table226.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table226.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 249
        testRunner.Given("the following commitments exist:", ((string)(null)), table226, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table227.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "18/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table227.AddRow(new string[] {
                        "learner a",
                        "52",
                        "19/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "19/11/2017",
                        "1125",
                        "19/11/2017"});
#line 253
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table227, "When ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table228.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2"});
#line 258
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table228, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table229.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table229.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table229.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table229.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table229.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 262
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table229, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later in" +
            " the next month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterInTheNextMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later in" +
                    " the next month", ((string[])(null)));
#line 270
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table230.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table230.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 271
        testRunner.Given("the following commitments exist:", ((string)(null)), table230, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table231.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "04/12/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table231.AddRow(new string[] {
                        "learner a",
                        "52",
                        "05/12/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "05/12/2017",
                        "1125",
                        "05/12/2017"});
#line 275
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table231, "When ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table232.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        "commitment 1 v2",
                        "commitment 1 v2"});
#line 280
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table232, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table233.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "562.50",
                        "562.50"});
            table233.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50"});
            table233.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50"});
            table233.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50",
                        "562.50"});
            table233.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 284
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table233, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later wi" +
            "thin the same month before commitment starts")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterWithinTheSameMonthBeforeCommitmentStarts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later wi" +
                    "thin the same month before commitment starts", ((string[])(null)));
#line 292
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table234.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table234.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 293
        testRunner.Given("the following commitments exist:", ((string)(null)), table234, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table235.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "05/11/2017",
                        "withdrawn",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table235.AddRow(new string[] {
                        "learner a",
                        "52",
                        "06/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "06/11/2017",
                        "1125",
                        "06/11/2017"});
#line 297
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table235, "When ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table236.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "",
                        ""});
#line 302
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table236, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table237.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table237.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table237.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table237.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table237.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 306
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table237, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("630-AC01  Earnings and payments for a DAS learner, levy available, and the total " +
            "assessment cost is increased in isolation (no change to total training price) du" +
            "ring the programme")]
        [NUnit.Framework.CategoryAttribute("TNP2OrTNP4Change")]
        public virtual void _630_AC01EarningsAndPaymentsForADASLearnerLevyAvailableAndTheTotalAssessmentCostIsIncreasedInIsolationNoChangeToTotalTrainingPriceDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("630-AC01  Earnings and payments for a DAS learner, levy available, and the total " +
                    "assessment cost is increased in isolation (no change to total training price) du" +
                    "ring the programme", new string[] {
                        "TNP2OrTNP4Change"});
#line 315
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line 317
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 318
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
  testRunner.And("the apprenticeship funding band maximum is 27000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table238.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "15500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table238.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "16000",
                        "active",
                        "15/11/2017",
                        ""});
#line 320
        testRunner.And("the following commitments exist:", ((string)(null)), table238, "And ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table239.AddRow(new string[] {
                        "learner a",
                        "05/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "11",
                        "12000",
                        "05/08/2017",
                        "3500",
                        "05/08/2017",
                        "4000",
                        "15/11/2017"});
#line 324
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table239, "When ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table240.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table240.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table240.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table240.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table240.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table240.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table240.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 327
  testRunner.Then("the data lock status will be as follows:", ((string)(null)), table240, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table241.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table241.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table241.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table241.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78"});
            table241.AddRow(new string[] {
                        "Payment due from employer 1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table241.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78"});
            table241.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table241.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 336
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table241, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("630-AC02  Earnings and payments for a DAS learner, levy available, and the total " +
            "assessment cost is decreased in isolation (no change to total training price) du" +
            "ring the programme")]
        [NUnit.Framework.CategoryAttribute("TNP2OrTNP4Change")]
        public virtual void _630_AC02EarningsAndPaymentsForADASLearnerLevyAvailableAndTheTotalAssessmentCostIsDecreasedInIsolationNoChangeToTotalTrainingPriceDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("630-AC02  Earnings and payments for a DAS learner, levy available, and the total " +
                    "assessment cost is decreased in isolation (no change to total training price) du" +
                    "ring the programme", new string[] {
                        "TNP2OrTNP4Change"});
#line 348
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line 350
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 351
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
  testRunner.And("the apprenticeship funding band maximum is 27000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table242.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "15500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table242.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "14000",
                        "active",
                        "15/11/2017",
                        ""});
#line 353
        testRunner.And("the following commitments exist:", ((string)(null)), table242, "And ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table243.AddRow(new string[] {
                        "learner a",
                        "05/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "11",
                        "12000",
                        "05/08/2017",
                        "3500",
                        "05/08/2017",
                        "2000",
                        "15/11/2017"});
#line 357
  testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table243, "When ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table244.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table244.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table244.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table244.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table244.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table244.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table244.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 361
  testRunner.Then("the data lock status will be as follows:", ((string)(null)), table244, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table245.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "900.00",
                        "900.00",
                        "900.00"});
            table245.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "900.00",
                        "900.00",
                        "900.00"});
            table245.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table245.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "900.00",
                        "900.00"});
            table245.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table245.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "900.00",
                        "900.00"});
            table245.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "900.00",
                        "900.00",
                        "900.00"});
            table245.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 370
  testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table245, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("630-AC03  Earnings and payments for a DAS learner, levy available, and the residu" +
            "al assessment cost is increased in isolation (no change to residual training pri" +
            "ce) during the programme")]
        [NUnit.Framework.CategoryAttribute("TNP2OrTNP4Change")]
        public virtual void _630_AC03EarningsAndPaymentsForADASLearnerLevyAvailableAndTheResidualAssessmentCostIsIncreasedInIsolationNoChangeToResidualTrainingPriceDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("630-AC03  Earnings and payments for a DAS learner, levy available, and the residu" +
                    "al assessment cost is increased in isolation (no change to residual training pri" +
                    "ce) during the programme", new string[] {
                        "TNP2OrTNP4Change"});
#line 382
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line 384
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 385
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
  testRunner.And("the apprenticeship funding band maximum is 27000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table246.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "15500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table246.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "16000",
                        "active",
                        "15/11/2017",
                        ""});
#line 387
        testRunner.And("the following commitments exist:", ((string)(null)), table246, "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Residual training price 1",
                        "Residual training price 1 effective date",
                        "Residual assessment price 1",
                        "Residual assessment price 1 effective date",
                        "Residual assessment price 2",
                        "Residual assessment price 2 effective date"});
            table247.AddRow(new string[] {
                        "learner a",
                        "05/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "11",
                        "12000",
                        "05/08/2017",
                        "3500",
                        "05/08/2017",
                        "4000",
                        "15/11/2017"});
#line 391
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table247, "When ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table248.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table248.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table248.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table248.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table248.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table248.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table248.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 394
    testRunner.Then("the data lock status will be as follows:", ((string)(null)), table248, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table249.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1422.22",
                        "1422.22",
                        "1422.22"});
            table249.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1422.22",
                        "1422.22",
                        "1422.22"});
            table249.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table249.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1422.22",
                        "1422.22"});
            table249.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table249.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1422.22",
                        "1422.22"});
            table249.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1422.22",
                        "1422.22",
                        "1422.22"});
            table249.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 403
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table249, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("630-AC04  Earnings and payments for a DAS learner, levy available, and the residu" +
            "al assessment cost is decreased in isolation (no change to residual training pri" +
            "ce) during the programme")]
        [NUnit.Framework.CategoryAttribute("TNP2OrTNP4Change")]
        public virtual void _630_AC04EarningsAndPaymentsForADASLearnerLevyAvailableAndTheResidualAssessmentCostIsDecreasedInIsolationNoChangeToResidualTrainingPriceDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("630-AC04  Earnings and payments for a DAS learner, levy available, and the residu" +
                    "al assessment cost is decreased in isolation (no change to residual training pri" +
                    "ce) during the programme", new string[] {
                        "TNP2OrTNP4Change"});
#line 415
this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line 416
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 417
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
  testRunner.And("the apprenticeship funding band maximum is 27000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table250.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "15500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table250.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "14000",
                        "active",
                        "15/11/2017",
                        ""});
#line 419
        testRunner.And("the following commitments exist:", ((string)(null)), table250, "And ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Residual training price 1",
                        "Residual training price 1 effective date",
                        "Residual assessment price 1",
                        "Residual assessment price 1 effective date",
                        "Residual assessment price 2",
                        "Residual assessment price 2 effective date"});
            table251.AddRow(new string[] {
                        "learner a",
                        "05/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "11",
                        "12000",
                        "05/08/2017",
                        "3500",
                        "05/08/2017",
                        "2000",
                        "15/11/2017"});
#line 423
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table251, "When ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table252.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table252.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table252.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table252.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table252.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table252.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table252.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 426
  testRunner.Then("the data lock status will be as follows:", ((string)(null)), table252, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table253.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1244.44",
                        "1244.44",
                        "1244.44"});
            table253.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1244.44",
                        "1244.44",
                        "1244.44"});
            table253.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table253.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1244.44",
                        "1244.44"});
            table253.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table253.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1244.44",
                        "1244.44"});
            table253.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1244.44",
                        "1244.44",
                        "1244.44"});
            table253.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 435
    testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table253, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("630-AC05  Earnings and payments for a DAS learner, levy available, and the total " +
            "assessment cost is added in isolation (no change to total training price, and no" +
            " assessment cost initially exists) during the programme")]
        [NUnit.Framework.CategoryAttribute("TNP2OrTNP4Change")]
        public virtual void _630_AC05EarningsAndPaymentsForADASLearnerLevyAvailableAndTheTotalAssessmentCostIsAddedInIsolationNoChangeToTotalTrainingPriceAndNoAssessmentCostInitiallyExistsDuringTheProgramme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("630-AC05  Earnings and payments for a DAS learner, levy available, and the total " +
                    "assessment cost is added in isolation (no change to total training price, and no" +
                    " assessment cost initially exists) during the programme", new string[] {
                        "TNP2OrTNP4Change"});
#line 447
 this.ScenarioSetup(scenarioInfo);
#line 4
    this.FeatureBackground();
#line 449
       testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 450
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
  testRunner.And("the apprenticeship funding band maximum is 27000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "standard code",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table254.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "15500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table254.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "28/08/2018",
                        "11",
                        "16000",
                        "active",
                        "15/11/2017",
                        ""});
#line 452
        testRunner.And("the following commitments exist:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table255.AddRow(new string[] {
                        "learner a",
                        "05/08/2017",
                        "28/08/2018",
                        "",
                        "continuing",
                        "11",
                        "15500",
                        "05/08/2017",
                        "0",
                        "05/08/2017",
                        "500",
                        "15/11/2017"});
#line 456
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table255, "When ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table256.AddRow(new string[] {
                        "On-program",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v1",
                        "commitment 1 v2",
                        "commitment 1 v2",
                        "commitment 1 v2"});
            table256.AddRow(new string[] {
                        "Completion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table256.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table256.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table256.AddRow(new string[] {
                        "Provider learning support",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table256.AddRow(new string[] {
                        "English and maths on programme",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table256.AddRow(new string[] {
                        "English and maths Balancing",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 459
  testRunner.Then("the data lock status will be as follows:", ((string)(null)), table256, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table257.AddRow(new string[] {
                        "Provider Earned Total",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table257.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table257.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table257.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78"});
            table257.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table257.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78"});
            table257.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1033.33",
                        "1033.33",
                        "1033.33",
                        "1077.78",
                        "1077.78",
                        "1077.78"});
            table257.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 468
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table257, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
