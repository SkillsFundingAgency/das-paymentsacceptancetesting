// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where learner refund payments are due")]
    [NUnit.Framework.CategoryAttribute("Refunds")]
    public partial class ProviderEarningsAndPaymentsWhereLearnerRefundPaymentsAreDueFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "refunds.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where learner refund payments are due", null, ProgrammingLanguage.CSharp, new string[] {
                        "Refunds"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC01 DAS learner, levy available, provider retrospectively notifies a withdra" +
            "wal and previously-paid monthly instalments need to be refunded.")]
        public virtual void _673_AC01DASLearnerLevyAvailableProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC01 DAS learner, levy available, provider retrospectively notifies a withdra" +
                    "wal and previously-paid monthly instalments need to be refunded.", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 6
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
    testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table584 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table584.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "04/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        ""});
#line 9
 testRunner.And("the following commitments exist:", ((string)(null)), table584, "And ");
#line hidden
            TechTalk.SpecFlow.Table table585 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table585.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 13
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table585, "And ");
#line hidden
            TechTalk.SpecFlow.Table table586 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table586.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table586.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table586.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table586.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table586.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table586.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table586.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table586.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 17
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table586, "And ");
#line hidden
            TechTalk.SpecFlow.Table table587 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table587.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 27
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table587, "When ");
#line hidden
            TechTalk.SpecFlow.Table table588 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table588.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table588.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table588.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table588.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table588.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1500"});
            table588.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table588.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table588.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1500"});
            table588.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table588.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 30
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table588, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC02 Non-DAS learner, levy available, provider retrospectively notifies a wit" +
            "hdrawal and previously-paid monthly instalments need to be refunded.")]
        public virtual void _673_AC02Non_DASLearnerLevyAvailableProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC02 Non-DAS learner, levy available, provider retrospectively notifies a wit" +
                    "hdrawal and previously-paid monthly instalments need to be refunded.", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table589 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table589.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 46
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table589, "And ");
#line hidden
            TechTalk.SpecFlow.Table table590 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table590.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table590.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
            table590.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75",
                        "0"});
            table590.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675"});
            table590.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75"});
            table590.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table590.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table590.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table590.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
#line 50
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table590, "And ");
#line hidden
            TechTalk.SpecFlow.Table table591 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table591.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 61
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table591, "When ");
#line hidden
            TechTalk.SpecFlow.Table table592 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table592.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "75",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
            table592.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1350"});
            table592.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75",
                        "0"});
            table592.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table592.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 64
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table592, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC03 DAS learner, insufficient levy available to cover full payments, provide" +
            "r retrospectively notifies a withdrawal and previously-paid monthly instalments " +
            "need to be refunded.\tGiven The learner is programme only DAS")]
        public virtual void _673_AC03DASLearnerInsufficientLevyAvailableToCoverFullPaymentsProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_GivenTheLearnerIsProgrammeOnlyDAS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC03 DAS learner, insufficient levy available to cover full payments, provide" +
                    "r retrospectively notifies a withdrawal and previously-paid monthly instalments " +
                    "need to be refunded.\tGiven The learner is programme only DAS", ((string[])(null)));
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
    testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table593 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table593.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        ""});
#line 82
 testRunner.And("the following commitments exist:", ((string)(null)), table593, "And ");
#line hidden
            TechTalk.SpecFlow.Table table594 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table594.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 85
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table594, "And ");
#line hidden
            TechTalk.SpecFlow.Table table595 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table595.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table595.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725",
                        "0"});
            table595.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25",
                        "0"});
            table595.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725"});
            table595.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25"});
            table595.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500"});
            table595.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "0"});
            table595.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "225",
                        "225",
                        "225",
                        "225",
                        "225",
                        "0"});
#line 89
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table595, "And ");
#line hidden
            TechTalk.SpecFlow.Table table596 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table596.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 99
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table596, "When ");
#line hidden
            TechTalk.SpecFlow.Table table597 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table597.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table597.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "725",
                        "725",
                        "725",
                        "0",
                        "0",
                        "0",
                        "0"});
            table597.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "25",
                        "25",
                        "25",
                        "0",
                        "0",
                        "0",
                        "0"});
            table597.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725",
                        "0"});
            table597.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1450"});
            table597.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25",
                        "0"});
            table597.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "0"});
            table597.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1000"});
            table597.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0"});
            table597.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "225",
                        "225",
                        "225",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 102
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table597, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("683-AC01- DAS learner, levy available, 2 providers - provider A and provider B, P" +
            "rovider B retrospectively notifies a withdrawal and previously-paid monthly inst" +
            "alments need to be refunded,")]
        public virtual void _683_AC01_DASLearnerLevyAvailable2Providers_ProviderAAndProviderBProviderBRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("683-AC01- DAS learner, levy available, 2 providers - provider A and provider B, P" +
                    "rovider B retrospectively notifies a withdrawal and previously-paid monthly inst" +
                    "alments need to be refunded,", ((string[])(null)));
#line 116
this.ScenarioSetup(scenarioInfo);
#line 119
 testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table598 = new TechTalk.SpecFlow.Table(new string[] {
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18"});
            table598.AddRow(new string[] {
                        "0",
                        "1125",
                        "1125",
                        "1125",
                        "1125",
                        "1125",
                        "1125"});
#line 121
 testRunner.And("the employer\'s levy balance is:", ((string)(null)), table598, "And ");
#line hidden
            TechTalk.SpecFlow.Table table599 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "Provider",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "standard code",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table599.AddRow(new string[] {
                        "1",
                        "Provider A",
                        "1",
                        "Learner A",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "25",
                        "5625",
                        "01/08/2017",
                        ""});
            table599.AddRow(new string[] {
                        "2",
                        "Provider B",
                        "1",
                        "Learner B",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "25",
                        "11250",
                        "01/08/2017",
                        ""});
#line 124
 testRunner.And("the following commitments exist:", ((string)(null)), table599, "And ");
#line hidden
            TechTalk.SpecFlow.Table table600 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table600.AddRow(new string[] {
                        "Learner A",
                        "04/08/2017",
                        "1",
                        "continuing"});
            table600.AddRow(new string[] {
                        "Learner B",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 129
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table600, "And ");
#line hidden
            TechTalk.SpecFlow.Table table601 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table601.AddRow(new string[] {
                        "Provider Earned Total",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table601.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table601.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table601.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table601.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table601.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table601.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table601.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 135
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table601, "And ");
#line hidden
            TechTalk.SpecFlow.Table table602 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table602.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table602.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table602.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table602.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table602.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table602.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table602.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table602.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 145
 testRunner.And("the following earnings and payments have been made to the provider B for learner " +
                    "B:", ((string)(null)), table602, "And ");
#line hidden
            TechTalk.SpecFlow.Table table603 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table603.AddRow(new string[] {
                        "Learner A",
                        "Provider A",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "Continuing",
                        "25",
                        "4500",
                        "04/08/2017",
                        "1125",
                        "04/08/2017"});
            table603.AddRow(new string[] {
                        "Learner B",
                        "Provider B",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "25",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 156
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table603, "When ");
#line hidden
            TechTalk.SpecFlow.Table table604 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table604.AddRow(new string[] {
                        "Provider Earned Total",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table604.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table604.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table604.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table604.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table604.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table604.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table604.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table604.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table604.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 161
    testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table604, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table605 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table605.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table605.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table605.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table605.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table605.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1500"});
            table605.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table605.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table605.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1500"});
            table605.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table605.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 173
    testRunner.Then("the earnings and payments break down for provider B is as follows:", ((string)(null)), table605, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table606 = new TechTalk.SpecFlow.Table(new string[] {
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18"});
            table606.AddRow(new string[] {
                        "-1125",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
#line 185
  testRunner.And("the net effect on employer\'s levy balance after each period end is:", ((string)(null)), table606, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("780-AC01 - Non-DAS standard learner, price is changed and a negative amount is le" +
            "ft to be paid - results in a refund")]
        public virtual void _780_AC01_Non_DASStandardLearnerPriceIsChangedAndANegativeAmountIsLeftToBePaid_ResultsInARefund()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("780-AC01 - Non-DAS standard learner, price is changed and a negative amount is le" +
                    "ft to be paid - results in a refund", ((string[])(null)));
#line 190
this.ScenarioSetup(scenarioInfo);
#line 191
 testRunner.Given("the apprenticeship funding band maximum is 15000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table607 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table607.AddRow(new string[] {
                        "Learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 193
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table607, "And ");
#line hidden
            TechTalk.SpecFlow.Table table608 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17"});
            table608.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "0"});
            table608.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "0"});
            table608.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table608.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "0"});
#line 196
 testRunner.And("the following earnings and payments have been made to the provider for learner a:" +
                    "", ((string)(null)), table608, "And ");
#line hidden
            TechTalk.SpecFlow.Table table609 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table609.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "1200",
                        "04/10/2017",
                        "200",
                        "04/10/2017"});
#line 207
    testRunner.When("an ILR file is submitted on 10/01/18 with the following data:", ((string)(null)), table609, "When ");
#line hidden
            TechTalk.SpecFlow.Table table610 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table610.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "-100",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-90",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "-10",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table610.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "585",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 210
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table610, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("518-AC01 - DAS standard learner, price is changed and a negative amount is left t" +
            "o be paid - results in a refund")]
        [NUnit.Framework.CategoryAttribute("das")]
        public virtual void _518_AC01_DASStandardLearnerPriceIsChangedAndANegativeAmountIsLeftToBePaid_ResultsInARefund()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("518-AC01 - DAS standard learner, price is changed and a negative amount is left t" +
                    "o be paid - results in a refund", new string[] {
                        "das"});
#line 226
this.ScenarioSetup(scenarioInfo);
#line 227
 testRunner.Given("the apprenticeship funding band maximum is 15000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 228
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table611 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table611.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        "03/10/2017"});
            table611.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "1400",
                        "04/10/2017",
                        ""});
#line 229
    testRunner.And("the following commitments exist:", ((string)(null)), table611, "And ");
#line hidden
            TechTalk.SpecFlow.Table table612 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table612.AddRow(new string[] {
                        "Learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 234
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table612, "And ");
#line hidden
            TechTalk.SpecFlow.Table table613 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17"});
            table613.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "0"});
            table613.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "0"});
            table613.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table613.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "750",
                        "750",
                        "0",
                        "0"});
#line 237
 testRunner.And("the following earnings and payments have been made to the provider for learner a:" +
                    "", ((string)(null)), table613, "And ");
#line hidden
            TechTalk.SpecFlow.Table table614 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table614.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "1200",
                        "04/10/2017",
                        "200",
                        "04/10/2017"});
#line 249
    testRunner.When("an ILR file is submitted on 10/01/18 with the following data:", ((string)(null)), table614, "When ");
#line hidden
            TechTalk.SpecFlow.Table table615 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table615.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "-100",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-100",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "100",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "650",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table615.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 253
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table615, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("802-AC01 - DAS standard learner, price is changed, originally mix funded and a ne" +
            "gative amount is left to be paid - results in a refund")]
        [NUnit.Framework.CategoryAttribute("Das")]
        public virtual void _802_AC01_DASStandardLearnerPriceIsChangedOriginallyMixFundedAndANegativeAmountIsLeftToBePaid_ResultsInARefund()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("802-AC01 - DAS standard learner, price is changed, originally mix funded and a ne" +
                    "gative amount is left to be paid - results in a refund", new string[] {
                        "Das"});
#line 269
this.ScenarioSetup(scenarioInfo);
#line 270
 testRunner.Given("the apprenticeship funding band maximum is 15000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table616 = new TechTalk.SpecFlow.Table(new string[] {
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17"});
            table616.AddRow(new string[] {
                        "750",
                        "375",
                        "1000",
                        "1000"});
#line 271
    testRunner.And("the employer\'s levy balance is:", ((string)(null)), table616, "And ");
#line hidden
            TechTalk.SpecFlow.Table table617 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table617.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        "03/10/2017"});
            table617.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "1400",
                        "04/10/2017",
                        ""});
#line 274
    testRunner.And("the following commitments exist:", ((string)(null)), table617, "And ");
#line hidden
            TechTalk.SpecFlow.Table table618 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "aim sequence number",
                        "completion status"});
            table618.AddRow(new string[] {
                        "Learner a",
                        "04/08/2017",
                        "1",
                        "continuing"});
#line 279
 testRunner.And("following learning has been recorded for previous payments:", ((string)(null)), table618, "And ");
#line hidden
            TechTalk.SpecFlow.Table table619 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17"});
            table619.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "0",
                        "0"});
            table619.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "712.50",
                        "0",
                        "0"});
            table619.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "37.50",
                        "0",
                        "0"});
            table619.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "712.50",
                        "0"});
            table619.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "37.50",
                        "0"});
            table619.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "375",
                        "0"});
            table619.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "375",
                        "0",
                        "0"});
            table619.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "337.50",
                        "0",
                        "0"});
            table619.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 283
 testRunner.And("the following earnings and payments have been made to the provider for learner a:" +
                    "", ((string)(null)), table619, "And ");
#line hidden
            TechTalk.SpecFlow.Table table620 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table620.AddRow(new string[] {
                        "learner a",
                        "programme only DAS",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "continuing",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017",
                        "1200",
                        "04/10/2017",
                        "200",
                        "04/10/2017"});
#line 295
    testRunner.When("an ILR file is submitted on 10/01/18 with the following data:", ((string)(null)), table620, "When ");
#line hidden
            TechTalk.SpecFlow.Table table621 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table621.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "-100",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "712.50",
                        "0",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "37.50",
                        "0",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "712.50",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "-95",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "37.50",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Refund due to employer",
                        "0",
                        "0",
                        "0",
                        "5",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "375",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "50",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "325",
                        "0",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "292.50",
                        "0",
                        "0",
                        "0",
                        "0"});
            table621.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 299
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table621, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
