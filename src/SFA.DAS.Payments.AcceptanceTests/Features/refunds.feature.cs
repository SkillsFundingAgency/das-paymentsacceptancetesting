// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where learner refund payments are due")]
    [NUnit.Framework.CategoryAttribute("Refunds")]
    public partial class ProviderEarningsAndPaymentsWhereLearnerRefundPaymentsAreDueFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "refunds.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where learner refund payments are due", null, ProgrammingLanguage.CSharp, new string[] {
                        "Refunds"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC01 DAS learner, levy available, provider retrospectively notifies a withdra" +
            "wal and previously-paid monthly instalments need to be refunded.")]
        public virtual void _673_AC01DASLearnerLevyAvailableProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC01 DAS learner, levy available, provider retrospectively notifies a withdra" +
                    "wal and previously-paid monthly instalments need to be refunded.", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 5
  testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
    testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table514 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table514.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        ""});
#line 8
 testRunner.And("the following commitments exist:", ((string)(null)), table514, "And ");
#line hidden
            TechTalk.SpecFlow.Table table515 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table515.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table515.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table515.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table515.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table515.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table515.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table515.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table515.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 12
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table515, "And ");
#line hidden
            TechTalk.SpecFlow.Table table516 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table516.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 22
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table516, "When ");
#line hidden
            TechTalk.SpecFlow.Table table517 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table517.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table517.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table517.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table517.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table517.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1500"});
            table517.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table517.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table517.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1500"});
            table517.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table517.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 25
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table517, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC02 Non-DAS learner, levy available, provider retrospectively notifies a wit" +
            "hdrawal and previously-paid monthly instalments need to be refunded.")]
        public virtual void _673_AC02Non_DASLearnerLevyAvailableProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC02 Non-DAS learner, levy available, provider retrospectively notifies a wit" +
                    "hdrawal and previously-paid monthly instalments need to be refunded.", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table518 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table518.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table518.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
            table518.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75",
                        "0"});
            table518.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675"});
            table518.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75"});
            table518.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table518.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table518.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table518.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
#line 41
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table518, "And ");
#line hidden
            TechTalk.SpecFlow.Table table519 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table519.AddRow(new string[] {
                        "learner a",
                        "programme only non-DAS",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 52
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table519, "When ");
#line hidden
            TechTalk.SpecFlow.Table table520 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table520.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "675",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "75",
                        "75",
                        "75",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "675",
                        "675",
                        "675",
                        "675",
                        "675",
                        "0"});
            table520.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1350"});
            table520.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "75",
                        "75",
                        "75",
                        "75",
                        "75",
                        "0"});
            table520.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table520.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 55
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table520, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("673-AC03 DAS learner, insufficient levy available to cover full payments, provide" +
            "r retrospectively notifies a withdrawal and previously-paid monthly instalments " +
            "need to be refunded.\tGiven The learner is programme only DAS")]
        public virtual void _673_AC03DASLearnerInsufficientLevyAvailableToCoverFullPaymentsProviderRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded_GivenTheLearnerIsProgrammeOnlyDAS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("673-AC03 DAS learner, insufficient levy available to cover full payments, provide" +
                    "r retrospectively notifies a withdrawal and previously-paid monthly instalments " +
                    "need to be refunded.\tGiven The learner is programme only DAS", ((string[])(null)));
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
    testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
    testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table521 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table521.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "11250",
                        "01/08/2017",
                        ""});
#line 73
 testRunner.And("the following commitments exist:", ((string)(null)), table521, "And ");
#line hidden
            TechTalk.SpecFlow.Table table522 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table522.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table522.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725",
                        "0"});
            table522.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25",
                        "0"});
            table522.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725"});
            table522.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25"});
            table522.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500"});
            table522.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "0"});
            table522.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "225",
                        "225",
                        "225",
                        "225",
                        "225",
                        "0"});
#line 76
 testRunner.And("the following earnings and payments have been made to the provider A for learner " +
                    "a:", ((string)(null)), table522, "And ");
#line hidden
            TechTalk.SpecFlow.Table table523 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table523.AddRow(new string[] {
                        "learner a",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 86
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table523, "When ");
#line hidden
            TechTalk.SpecFlow.Table table524 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table524.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table524.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "725",
                        "725",
                        "725",
                        "0",
                        "0",
                        "0",
                        "0"});
            table524.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "25",
                        "25",
                        "25",
                        "0",
                        "0",
                        "0",
                        "0"});
            table524.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "725",
                        "725",
                        "725",
                        "725",
                        "725",
                        "0"});
            table524.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1450"});
            table524.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "25",
                        "25",
                        "25",
                        "25",
                        "25",
                        "0"});
            table524.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "0"});
            table524.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1000"});
            table524.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0"});
            table524.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "225",
                        "225",
                        "225",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 89
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table524, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("683-AC01- DAS learner, levy available, 2 providers � provider A and provider B, P" +
            "rovider B retrospectively notifies a withdrawal and previously-paid monthly inst" +
            "alments need to be refunded,")]
        public virtual void _683_AC01_DASLearnerLevyAvailable2ProvidersProviderAAndProviderBProviderBRetrospectivelyNotifiesAWithdrawalAndPreviously_PaidMonthlyInstalmentsNeedToBeRefunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("683-AC01- DAS learner, levy available, 2 providers � provider A and provider B, P" +
                    "rovider B retrospectively notifies a withdrawal and previously-paid monthly inst" +
                    "alments need to be refunded,", ((string[])(null)));
#line 103
this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table525 = new TechTalk.SpecFlow.Table(new string[] {
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18"});
            table525.AddRow(new string[] {
                        "0",
                        "1125",
                        "1125",
                        "1125",
                        "1125",
                        "1125",
                        "1125"});
#line 108
 testRunner.And("the employer\'s levy balance is:", ((string)(null)), table525, "And ");
#line hidden
            TechTalk.SpecFlow.Table table526 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "Provider",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "standard code",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table526.AddRow(new string[] {
                        "1",
                        "Provider A",
                        "1",
                        "Learner A",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "25",
                        "5625",
                        "01/08/2017",
                        ""});
            table526.AddRow(new string[] {
                        "2",
                        "Provider B",
                        "1",
                        "Learner B",
                        "01/08/2017",
                        "01/08/2018",
                        "active",
                        "25",
                        "11250",
                        "01/08/2017",
                        ""});
#line 111
 testRunner.And("the following commitments exist:", ((string)(null)), table526, "And ");
#line hidden
            TechTalk.SpecFlow.Table table527 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table527.AddRow(new string[] {
                        "Provider Earned Total",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table527.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table527.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table527.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table527.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table527.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table527.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "0"});
            table527.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 115
 testRunner.And("the following earnings and payments have been made to the Provider A for Learner " +
                    "A:", ((string)(null)), table527, "And ");
#line hidden
            TechTalk.SpecFlow.Table table528 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table528.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table528.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table528.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table528.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table528.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table528.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
            table528.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table528.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 125
 testRunner.And("the following earnings and payments have been made to the Provider B for Learner " +
                    "B:", ((string)(null)), table528, "And ");
#line hidden
            TechTalk.SpecFlow.Table table529 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "Provider",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "standard code",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table529.AddRow(new string[] {
                        "Learner A",
                        "Provider A",
                        "04/08/2017",
                        "20/08/2018",
                        "",
                        "Continuing",
                        "25",
                        "4500",
                        "04/08/2017",
                        "1125",
                        "04/08/2017"});
            table529.AddRow(new string[] {
                        "Learner B",
                        "Provider B",
                        "04/08/2017",
                        "20/08/2018",
                        "12/11/2017",
                        "withdrawn",
                        "25",
                        "9000",
                        "04/08/2017",
                        "2250",
                        "04/08/2017"});
#line 136
    testRunner.When("an ILR file is submitted for the first time on 10/01/18 with the following data:", ((string)(null)), table529, "When ");
#line hidden
            TechTalk.SpecFlow.Table table530 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table530.AddRow(new string[] {
                        "Provider Earned Total",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table530.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table530.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table530.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table530.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table530.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table530.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table530.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table530.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375",
                        "375"});
            table530.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 141
    testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table530, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table531 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table531.AddRow(new string[] {
                        "Provider Earned Total",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table531.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table531.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table531.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table531.AddRow(new string[] {
                        "Refund taken by SFA",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "-1500"});
            table531.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table531.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "0"});
            table531.AddRow(new string[] {
                        "Levy account credited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1500"});
            table531.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "750",
                        "750",
                        "750",
                        "0",
                        "0",
                        "0",
                        "0"});
            table531.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 153
    testRunner.Then("the earnings and payments break down for provider B is as follows:", ((string)(null)), table531, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table532 = new TechTalk.SpecFlow.Table(new string[] {
                        "01/18",
                        "02/18",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18"});
            table532.AddRow(new string[] {
                        "-1125",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750",
                        "750"});
#line 165
  testRunner.And("the net effect on employer\'s levy balance after each period end is:", ((string)(null)), table532, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
